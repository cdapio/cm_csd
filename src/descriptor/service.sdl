{
  "name": "CDAP",
  "label": "CDAP",
  "description": "The Cask Data Application Platform (CDAP) is an easy-to-use, open source and enterprise-ready integrated platform for organizations to build, deploy, and operate data-driven applications.",
  "version": "5.0.0-SNAPSHOT",
  "runAs": {
    "user": "cdap",
    "group": "cdap"
  },
  "maxInstances": 1,
  "compatibility": {
    "generation": 1,
    "cdhVersion": {
      "min": "5",
      "max": 5
    }
  },
  "parcel": {
    "repoUrl": "http://repository.cask.co/parcels/cdap/5.0/",
    "requiredTags": [ "cdh", "cdap" ],
    "optionalTags" : ["spark2"]
  },
  "icon": "images/icon.png",
  "serviceDependencies": [
    {"name": "ZOOKEEPER", "required": "true" },
    {"name": "HDFS", "required": "true"},
    {"name": "YARN", "required": "true"},
    {"name": "HBASE", "required": "true"},
    {"name": "HIVE", "required": "false"},
    {"name": "SENTRY", "required": "false"},
    {"name": "SPARK_ON_YARN", "required": "false"},
    {"name": "SPARK2_ON_YARN", "required": "false"}
  ],
  "rolesWithExternalLinks": [
    "CDAP_UI"
  ],
  "hdfsDirs": [
    {
      "name": "CreateCdapHdfsDirCommand",
      "label": "Create CDAP Namespace Dir",
      "description": "Creates the top-level CDAP namespace directory in HDFS",
      "directoryDescription": "CDAP HDFS namespace directory",
      "path": "/${root_namespace}",
      "permissions": "0755"
    },
    {
      "name": "CreateCdapUserHdfsDirCommand",
      "label": "Create CDAP User Dir",
      "description": "Creates the /user/cdap HDFS directory needed for mapreduce",
      "directoryDescription": "CDAP HDFS user directory",
      "path": "/user/${hdfs_user}",
      "permissions": "0755"
    }
  ],
  "serviceInit": {
    "preStartSteps": [
      { "commandName": "CreateCdapHdfsDirCommand" },
      { "commandName": "CreateCdapUserHdfsDirCommand" }
    ]
  },
  "commands": [
    {
      "name": "cdap_upgrade_tool",
      "label": "Run CDAP Upgrade",
      "description": "Run after upgrading the CDAP Parcel, and before starting CDAP",
      "roleCommand": "master_upgrade_tool",
      "roleName": "CDAP_MASTER",
      "runMode": "single"
    },
    {
      "name": "cdap_upgrade_hbase_tool",
      "label": "Run Post-CDH Upgrade Tasks",
      "description": "Run after upgrading CDH, after disabling CDAP HBase Tables, and before starting CDAP",
      "roleCommand": "master_upgrade_hbase_tool",
      "roleName": "CDAP_MASTER",
      "runMode": "single"
    },
    {
      "name": "cdap_post_upgrade_tasks",
      "label": "Run Post-CDAP Upgrade Tasks",
      "description": "Run after upgrading CDAP, and after starting CDAP the first time",
      "roleCommand": "master_post_upgrade_tasks",
      "roleName": "CDAP_MASTER",
      "runMode": "single"
    },
    {
      "name": "cdap_debugger_utility",
      "label": "Run Configured CDAP Debugger Utility",
      "description": "Run the configured CDAP Debugger Utility. See debugger.utility.class",
      "roleCommand": "master_debugger_utility",
      "roleName": "CDAP_MASTER",
      "runMode": "single"
    }
  ],
  "gateway": {
    "alternatives": {
      "name": "cdap-conf",
      "linkRoot": "/etc/cdap",
      "priority": 60
    },
    "parameters": [],
    "configWriter": {
      "auxConfigGenerators": [
        {
          "filename": "cdap-conf/cdap-env.sh",
          "sourceFilename": "aux/client/cdap-env.sh"
        }
      ],
      "generators": [
        {
          "filename": "cdap-conf/cdap-site.xml",
          "configFormat": "hadoop_xml",
          "excludedParams": [ "cdap_java_opts", "debugger_utility_class", "debugger_utility_args", "csd_compatibility_check_enabled" ]
        }
      ],
      "peerConfigGenerators": [
        {
          "filename": "kafka.properties",
          "params": [ "kafka_server_port" ],
          "roleName": "CDAP_KAFKA"
        }
      ]
    },
    "scriptRunner": {
      "program": "scripts/cdap-control.sh",
      "args": ["client"],
      "environmentVariables": {
        "EXPLORE_ENABLED": "${explore_enabled}",
        "KAFKA_PROPERTIES": "kafka.properties",
        "KERBEROS_ENABLED": "${kerberos_auth_enabled}"
      }
    }
  },
  "kerberos": "${kerberos_auth_enabled}",
  "parameters": [
    {
      "name": "apps_scheduler_queue",
      "label": "Apps Scheduler Queue",
      "description": "Scheduler queue for CDAP programs and CDAP Explore queries",
      "configName": "apps.scheduler.queue",
      "configurableInWizard": false,
      "type": "string"
    },
    {
      "name": "app_temp_dir",
      "label": "App Temp Dir",
      "description": "Temp directory",
      "configName": "app.temp.dir",
      "required": true,
      "configurableInWizard": false,
      "default": "/tmp",
      "type": "string"
    },
    {
      "name": "app_artifact_dir",
      "label": "App Artifact Dir",
      "description": "Semicolon-separated list of local directories scanned for system artifacts to add to the artifact repository",
      "configName": "app.artifact.dir",
      "configurableInWizard": false,
      "type": "string_array",
      "default": [
        "${cdap.home}/master/artifacts",
        "${cdap.home}/master/artifacts/${app.program.spark.compat}"
      ],
      "separator": ";"
    },
    {
      "name": "app_program_runtime_extensions_dir",
      "label": "App Program Runtime Extensions Dir",
      "description": "Semicolon-separated list of local directories that are scanned for program runtime extensions",
      "configName": "app.program.runtime.extensions.dir",
      "configurableInWizard": true,
      "type": "string_array",
      "default": [
        "${cdap.home}/master/ext/runtimes"
      ],
      "separator": ";"
    },
    {
      "name": "audit_enabled",
      "label": "Audit Enabled",
      "description": "Determines whether to publish audit messages to Apache Kafka",
      "configName": "audit.enabled",
      "configurableInWizard": false,
      "default": true,
      "type": "boolean"
    },
    {
      "name": "audit_topic",
      "label": "Audit Topic",
      "description": "Topic name in the messaging system to which audit messages are published",
      "configName": "audit.topic",
      "required": true,
      "configurableInWizard": false,
      "default": "audit",
      "type": "string"
    },
    {
      "name": "csd_compatibility_check_enabled",
      "label": "CSD Compatibility Check Enabled",
      "description": "Whether to enforce that the installed CDAP CSD version is compatible with the CDAP Parcel. If this check fails, CDAP processes will fail to start.",
      "configName": "csd.compatibility.check.enabled",
      "configurableInWizard": false,
      "default": true,
      "type": "boolean"
    },
    {
      "name": "cdap_java_opts",
      "label": "Additional Java Options",
      "description": "Additional Java Options passed on the command line",
      "default": "-XX:+UseG1GC",
      "type": "string"
    },
    {
      "name": "custom_action_retry_policy_base_delay_ms",
      "label": "Custom Action Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "custom.action.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "custom_action_retry_policy_max_delay_ms",
      "label": "Custom Action Retry Policy Maximum Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "custom.action.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": 30000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "custom_action_retry_policy_max_retries",
      "label": "Custom Action Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "custom.action.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long"
    },
    {
      "name": "custom_action_retry_policy_max_time_secs",
      "label": "Custom Action Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "custom.action.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 600,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "custom_action_retry_policy_type",
      "label": "Custom Action Retry Policy Type",
      "description": "The type of retry policy for custom actions",
      "configName": "custom.action.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "exponential.backoff",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "data_event_topic",
      "label": "Data Event Topic",
      "description": "Topic name for publishing data events to the messaging system",
      "configName": "data.event.topic",
      "configurableInWizard": false,
      "default": "dataevent",
      "type": "string"
    },
    {
      "name": "data_tx_max_instances",
      "label": "Transaction Client Max Instances",
      "description": "Maximum number of transaction service instances",
      "configName": "data.tx.max.instances",
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "data_tx_max_timeout",
      "label": "Transaction Client Max Timeout",
      "description": "The limit for the allowed transaction timeout, in seconds. Attempts to start a transaction with a longer timeout will fail.",
      "configName": "data.tx.max.timeout",
      "configurableInWizard": false,
      "default": "600",
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "data_tx_memory_mb",
      "label": "Transaction Client Container Memory MB",
      "description": "Memory in megabytes for each transaction service instance",
      "configName": "data.tx.memory.mb",
      "configurableInWizard": true,
      "default": 1024,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "data_tx_num_cores",
      "label": "Transaction Client Container Number of Virtual Cores",
      "description": "Number of cores for the transaction service",
      "configName": "data.tx.num.cores",
      "configurableInWizard": true,
      "default": 2,
      "type": "long",
      "min": 1
    },
    {
      "name": "data_tx_num_instances",
      "label": "Transaction Client Number of Instances",
      "description": "Requested number of transaction service instances",
      "configName": "data.tx.num.instances",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "data_tx_prune_enable",
      "label": "Transaction Client Prune Enable",
      "description": "Enable invalid transaction list pruning",
      "configName": "data.tx.prune.enable",
      "configurableInWizard": false,
      "default": true,
      "type": "boolean"
    },
    {
      "name": "data_tx_prune_state_table",
      "label": "Transaction Client Prune State Table",
      "description": "Table used to store intermediate state when invalid transaction list pruning is enabled",
      "configName": "data.tx.prune.state.table",
      "required": true,
      "configurableInWizard": false,
      "default": "${dataset.table.prefix}_system:tephra.state",
      "type": "string"
    },
    {
      "name": "data_tx_pruning_plugin_class",
      "label": "Transaction Client Pruning Plugin Class",
      "description": "Class name for the default transaction pruning plugin",
      "configName": "data.tx.pruning.plugin.class",
      "required": true,
      "configurableInWizard": false,
      "default": "co.cask.data2.txprune.DefaultHBaseTransactionPruningPlugin",
      "type": "string"
    },
    {
      "name": "data_tx_timeout",
      "label": "Transaction Client Timeout",
      "description": "Timeout value in seconds for a transaction; if the transaction is not finished in that time, it is marked invalid",
      "configName": "data.tx.timeout",
      "configurableInWizard": false,
      "default": 30,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "data_tx_twill_java_heap_memory_ratio",
      "label": "Transaction Client Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the transaction client service container",
      "configName": "data.tx.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "data_tx_twill_java_reserved_memory_mb",
      "label": "Transaction Client Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for the transaction client service container. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size.",
      "configName": "data.tx.twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 300,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "dataset_executor_container_instances",
      "label": "Dataset Executor Container Instances",
      "description": "Number of dataset executor instances",
      "configName": "dataset.executor.container.instances",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "dataset_executor_container_memory_mb",
      "label": "Dataset Executor Container Memory MB",
      "description": "Memory in megabytes for each dataset executor instance",
      "configName": "dataset.executor.container.memory.mb",
      "configurableInWizard": true,
      "default": 1024,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "dataset_executor_container_num_cores",
      "label": "Dataset Executor Container Number of Virtual Cores",
      "description": "Number of virtual cores for each dataset executor instance",
      "configName": "dataset.executor.container.num.cores",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "dataset_executor_max_instances",
      "label": "Dataset Executor Max Instances",
      "description": "Maximum number of dataset executor instances",
      "configName": "dataset.executor.max.instances",
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "dataset_executor_twill_java_heap_memory_ratio",
      "label": "Dataset Executor Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the dataset executor service container",
      "configName": "dataset.executor.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "dataset_executor_twill_java_reserved_memory_mb",
      "label": "Dataset Executor Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for the dataset executor service container. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size.",
      "configName": "dataset.executor.twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 300,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "debugger_utility_class",
      "label": "CDAP Debugger Utility Class Name",
      "description": "CDAP Debugger Utility Class to run from the Actions menu",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "co.cask.cdap.data.tools.SimpleHBaseQueueDebugger",
      "validValues": [
        "co.cask.cdap.data.tools.SimpleHBaseQueueDebugger",
        "co.cask.cdap.data.tools.HBaseQueueDebugger",
        "co.cask.cdap.data.tools.JobQueueDebugger"
      ]
    },
    {
      "name": "debugger_utility_args",
      "label": "CDAP Debugger Utility Arguments",
      "description": "CDAP Debugger Utility Arguments run from the Actions menu",
      "configurableInWizard": false,
      "type": "string",
      "default": "help"
    },
    {
      "name": "enable_unrecoverable_reset",
      "label": "Enable Unrecoverable Reset",
      "description": "Determines if resetting CDAP should be enabled. **WARNING: Enabling this option makes it possible to delete all applications and data; NO RECOVERY IS POSSIBLE!**",
      "configName": "enable.unrecoverable.reset",
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "explore_container_yarn_app_classpath_first",
      "label": "Explore Container Yarn App Classpath First",
      "description": "Determines if the YARN application classpath precedes the query engine classpath",
      "configName": "explore.container.yarn.app.classpath.first",
      "configurableInWizard": false,
      "default": "false",
      "type": "boolean"
    },
    {
      "name": "explore_enabled",
      "label": "Explore Enabled",
      "description": "Determines if the CDAP Explore Service (ad-hoc SQL queries) is enabled",
      "configName": "explore.enabled",
      "configurableInWizard": true,
      "default": true,
      "type": "boolean"
    },
    {
      "name": "explore_executor_container_memory_mb",
      "label": "Explore Executor Container Memory MB",
      "description": "Memory in megabytes for each CDAP Explore executor instance. This is explicitly set differently than ${master.service.memory.mb} as Explore requires more memory to run than the Master service.",
      "configName": "explore.executor.container.memory.mb",
      "configurableInWizard": true,
      "default": 2048,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "explore_executor_container_num_cores",
      "label": "Explore Executor Container Number of Virtual Cores",
      "description": "Number of virtual cores for each explore executor instance",
      "configName": "explore.executor.container.num.cores",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "explore_executor_twill_java_heap_memory_ratio",
      "label": "Explore Executor Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the explore service container",
      "configName": "explore.executor.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "explore_executor_twill_java_reserved_memory_mb",
      "label": "Explore Executor Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for the explore service container. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size.",
      "configName": "explore.executor.twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 300,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "explore_http_timeout",
      "label": "Explore Http Timeout",
      "description": "The timeout in seconds for HTTP requests to the CDAP Explore service. Because requests may happen within a transaction, it is recommended to keep this timeout noticeably shorter than the default transaction timeout, ${data.tx.timeout}.",
      "configName": "explore.http.timeout",
      "configurableInWizard": false,
      "default": 20,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "flow_retry_policy_base_delay_ms",
      "label": "Flow Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "flow.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 100,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "flow_retry_policy_max_delay_ms",
      "label": "Flow Retry Policy Maximum Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "flow.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "flow_retry_policy_max_retries",
      "label": "Flow Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "flow.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 3,
      "type": "long"
    },
    {
      "name": "flow_retry_policy_max_time_secs",
      "label": "Flow Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "flow.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 10,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "flow_retry_policy_type",
      "label": "Flow Retry Policy Type",
      "description": "The type of retry policy for flows",
      "configName": "flow.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "none",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "hbase_version_resolution_strategy",
      "label": "HBase Version Resolution Strategy",
      "description": "Determines how to behave when the HBase version on a cluster is an unsupported value. The default value of 'auto.strict' will require that the HBase version match a supported value, and CDAP Master will not start if the HBase version is unsupported. Set to \"auto.latest\" to use the latest HBase version available on the cluster with an unsupported HBase version.",
      "configName": "hbase.version.resolution.strategy",
      "configurableInWizard": false,
      "type": "string",
      "default": "auto.strict"
    },
    {
      "name": "hdfs_namespace",
      "label": "HDFS Namespace",
      "description": "Root directory for HDFS files written by CDAP",
      "configName": "hdfs.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "/${root.namespace}",
      "type": "string"
    },
    {
      "name": "hdfs_user",
      "label": "HDFS User",
      "description": "User name for accessing HDFS",
      "configName": "hdfs.user",
      "required": true,
      "configurableInWizard": false,
      "default": "cdap",
      "type": "string"
    },
    {
      "name": "hive_version_resolution_strategy",
      "label": "Hive Version Resolution Strategy",
      "description": "Determines how to behave when the Hive version on a cluster is an unsupported value. The default value of 'auto.strict' will require that the Hive version matches a supported value; if Explore is enabled, CDAP Master will then not start if the Hive version is unsupported. Set to \"auto.latest\" to use the latest Hive version of CDAP modules available on the cluster with an unsupported Hive version. This property is ignored for supported versions of Hive or if Explore has been disabled by setting ${explore.enabled} to false.",
      "configName": "hive.version.resolution.strategy",
      "configurableInWizard": false,
      "type": "string",
      "default": "auto.strict"
    },
    {
      "name": "kerberos_auth_enabled",
      "label": "Kerberos Auth Enabled",
      "description": "Determines if Kerberos authentication is enabled",
      "configName": "kerberos.auth.enabled",
      "configurableInWizard": true,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "local_data_dir",
      "label": "Local Data Directory",
      "description": "Data directory for the master process",
      "configName": "local.data.dir",
      "required": true,
      "configurableInWizard": true,
      "default": "data",
      "type": "string"
    },
    {
      "name": "log_saver_container_memory_mb",
      "label": "Log Saver Container Memory MB",
      "description": "Memory in megabytes for each log saver instance to run in YARN.",
      "configName": "log.saver.container.memory.mb",
      "configurableInWizard": true,
      "default": "1024",
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "log_saver_max_instances",
      "label": "Log Saver Max Instances",
      "description": "Maximum number of log saver instances to run in YARN",
      "configName": "log.saver.max.instances",
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "log_saver_container_num_cores",
      "label": "Log Saver Container Num Cores",
      "description": "Number of virtual cores for each log saver instance in YARN",
      "configName": "log.saver.container.num.cores",
      "configurableInWizard": true,
      "default": "2",
      "type": "long",
      "min": 1
    },
    {
      "name": "log_saver_num_instances",
      "label": "Log Saver Num Instances",
      "description": "Number of log saver instances to run in YARN",
      "configName": "log.saver.num.instances",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "log_saver_twill_java_heap_memory_ratio",
      "label": "Log Saver Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the log saver service container",
      "configName": "log.saver.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "log_saver_twill_java_reserved_memory_mb",
      "label": "Log Saver Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for the log saver service container. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size.",
      "configName": "log.saver.twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 300,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "mapreduce_retry_policy_base_delay_ms",
      "label": "MapReduce Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "mapreduce.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "mapreduce_retry_policy_max_delay_ms",
      "label": "MapReduce Retry Policy Maximum Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "mapreduce.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": 30000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "mapreduce_retry_policy_max_retries",
      "label": "MapReduce Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "mapreduce.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long"
    },
    {
      "name": "mapreduce_retry_policy_max_time_secs",
      "label": "MapReduce Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "mapreduce.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 600,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "mapreduce_retry_policy_type",
      "label": "MapReduce Retry Policy Type",
      "description": "The type of retry policy for MapReduce programs",
      "configName": "mapreduce.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "exponential.backoff",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "program_message_retry_policy_base_delay_ms",
      "label": "Program Message Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "program.message.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": "1000",
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "program_message_retry_policy_max_delay_ms",
      "label": "Program Message Retry Policy Max Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "program.message.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": "3000",
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "program_message_retry_policy_max_retries",
      "label": "Program Message Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "program.message.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": "1000",
      "type": "long"
    },
    {
      "name": "program_message_retry_policy_max_time_secs",
      "label": "Program Message Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "program.message.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": "600",
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "program_message_retry_policy_type",
      "label": "Program Message Retry Policy Type",
      "description": "The type of retry policy for programs. Allowed options:\"none\", \"fixed.delay\", or \"exponential.backoff\".",
      "configName": "program.message.retry.policy.type",
      "configurableInWizard": false,
      "default": "fixed.delay",
      "type": "string_enum",
      "default": "fixed.delay",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "program_status_event_topic",
      "label": "Program Status Event Topic",
      "description": "Topic name for publishing program status events from program runners to the messaging system",
      "configName": "program.status.event.topic",
      "configurableInWizard": false,
      "default": "programstatusevent",
      "type": "string"
    },
    {
      "name": "master_services_scheduler_queue",
      "label": "Master Services Scheduler Queue",
      "description": "Scheduler queue for CDAP Master Services",
      "configName": "master.services.scheduler.queue",
      "configurableInWizard": false,
      "type": "string"
    },
    {
      "name": "messaging_cache_size_mb",
      "label": "Messaging Cache Size MB",
      "description": "Memory in megabytes for the cache size used by the messaging service for caching recently-published messages. Currently, only topics listed in the ${messaging.system.topics} configuration have caching enabled. Set it to 0 to disable caching.",
      "configName": "messaging.cache.size.mb",
      "configurableInWizard": false,
      "default": "30",
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "messaging_container_memory_mb",
      "label": "Messaging Container Memory MB",
      "description": "Memory in megabytes for each messaging service instance",
      "configName": "messaging.container.memory.mb",
      "configurableInWizard": true,
      "default": "1024",
      "unit": "megabytes",
      "type": "memory",
      "min": 512
    },
    {
      "name": "messaging_container_num_cores",
      "label": "Messaging Container Num Cores",
      "description": "Number of virtual cores for each messaging service instance",
      "configName": "messaging.container.num.cores",
      "configurableInWizard": true,
      "default": "2",
      "type": "long",
      "min": 1
    },
    {
      "name": "messaging_hbase_max_scan_threads",
      "label": "Messaging HBase Max Scan Threads",
      "description": "Maximum number of threads used for scanning HBase tables",
      "configName": "messaging.hbase.max.scan.threads",
      "configurableInWizard": false,
      "default": "96",
      "type": "long",
      "min": 1
    },
    {
      "name": "messaging_http_server_consume_chunk_size",
      "label": "Messaging HTTP Server Consume Chunk Size",
      "description": "Approximate size in bytes of each chunk streamed back to a consumer",
      "configName": "messaging.http.server.consume.chunk.size",
      "configurableInWizard": false,
      "default": "60000",
      "type": "memory",
      "unit": "bytes"
    },
    {
      "name": "messaging_http_server_executor_threads",
      "label": "Messaging HTTP Server Executor Threads",
      "description": "Number of executor threads for the HTTP server in the messaging system. If set to 0, no executor threads will be used and requests will be handled directly in the IO thread.",
      "configName": "messaging.http.server.executor.threads",
      "configurableInWizard": false,
      "default": "0",
      "type": "long"
    },
    {
      "name": "messaging_http_server_max_request_size_mb",
      "label": "Messaging HTTP Server Max Request Size MB",
      "description": "Maximum request content size in megabytes for each request to the HTTP server in the messaging system",
      "configName": "messaging.http.server.max.request.size.mb",
      "configurableInWizard": false,
      "default": "10",
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "messaging_http_server_worker_threads",
      "label": "Messaging HTTP Server Worker Threads",
      "description": "Number of IO threads used by the HTTP server in the messaging system",
      "configName": "messaging.http.server.worker.threads",
      "configurableInWizard": false,
      "default": "30",
      "type": "long"
    },
    {
      "name": "messaging_message_table_hbase_splits",
      "label": "Messaging Message Table HBase Splits",
      "description": "Number of splits to use for the message table in HBase upon table creation",
      "configName": "messaging.message.table.hbase.splits",
      "configurableInWizard": false,
      "default": "16",
      "type": "long"
    },
    {
      "name": "messaging_message_table_name",
      "label": "Messaging Message Table Name",
      "description": "Name of the message table of the messaging system",
      "configName": "messaging.message.table.name",
      "required": true,
      "configurableInWizard": false,
      "default": "tms.message",
      "type": "string"
    },
    {
      "name": "messaging_metadata_table_name",
      "label": "Messaging Metadata Table Name",
      "description": "Name of the metadata table of the messaging system",
      "configName": "messaging.metadata.table.name",
      "required": true,
      "configurableInWizard": false,
      "default": "tms.meta",
      "type": "string"
    },
    {
      "name": "messaging_payload_table_hbase_splits",
      "label": "Messaging Payload Table HBase Splits",
      "description": "Number of splits to use for the payload table in HBase upon table creation",
      "configName": "messaging.payload.table.hbase.splits",
      "configurableInWizard": false,
      "default": "16",
      "type": "long"
    },
    {
      "name": "messaging_payload_table_name",
      "label": "Messaging Payload Table Name",
      "description": "Name of the payload table of the messaging system",
      "configName": "messaging.payload.table.name",
      "required": true,
      "configurableInWizard": false,
      "default": "tms.payload",
      "type": "string"
    },
    {
      "name": "messaging_table_expiration_seconds",
      "label": "Messaging Table Expiration Seconds",
      "description": "Number of seconds after which the messaging table cache will expire",
      "configName": "messaging.table.expiration.seconds",
      "configurableInWizard": false,
      "default": "300",
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "messaging_topic_default_ttl_seconds",
      "label": "Messaging Topic Default TTL Seconds",
      "description": "The default time-to-live in seconds for messages in a topic",
      "configName": "messaging.topic.default.ttl.seconds",
      "configurableInWizard": false,
      "default": "604800",
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "messaging_twill_java_heap_memory_ratio",
      "label": "Messaging Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the messaging service container",
      "configName": "messaging.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "messaging_twill_java_reserved_memory_mb",
      "label": "Messaging Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for the messaging service container. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size.",
      "configName": "messaging.twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 512,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "metrics_data_table_retention_resolution_1_seconds",
      "label": "Metrics Data Table Retention Resolution 1 Seconds",
      "description": "Retention resolution in seconds of the 1-second resolution table; default retention period is 2 hours",
      "configName": "metrics.data.table.retention.resolution.1.seconds",
      "configurableInWizard": false,
      "default": 7200,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_hbase_max_scan_threads",
      "label": "Metrics Hbase Max Scan Threads",
      "description": "Maximum number of threads used for scanning HBase tables",
      "configName": "metrics.hbase.max.scan.threads",
      "configurableInWizard": false,
      "default": 96,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_kafka_meta_table",
      "label": "Metrics Kafka Meta Table",
      "description": "Name of the Kafka metrics meta table",
      "configName": "metrics.kafka.meta.table",
      "required": true,
      "configurableInWizard": false,
      "default": "metrics.kafka.meta",
      "type": "string"
    },
    {
      "name": "metrics_kafka_partition_size",
      "label": "Metrics Kafka Partition Size",
      "description": "Number of partitions for the Kafka metrics topic",
      "configName": "metrics.kafka.partition.size",
      "configurableInWizard": false,
      "default": 10,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_kafka_topic_prefix",
      "label": "Metrics Kafka Topic Prefix",
      "description": "Topic prefix used to publish metrics in Kafka",
      "configName": "metrics.kafka.topic.prefix",
      "required": true,
      "configurableInWizard": false,
      "default": "metrics",
      "type": "string"
    },
    {
      "name": "metrics_max_instances",
      "label": "Metrics Container Max Instances",
      "description": "Maximum number of instances for the metrics service",
      "configName": "metrics.max.instances",
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_memory_mb",
      "label": "Metrics Container Memory MB",
      "description": "Memory in megabytes for each metrics service instance",
      "configName": "metrics.memory.mb",
      "configurableInWizard": true,
      "default": 1024,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "metrics_messaging_fetcher_limit",
      "label": "Metrics Messaging Fetcher Limit",
      "description": "Maximum number of metrics messages to be fetched from the messaging fetcher at a time. It is also the maximum number of metric values to be persisted in the metrics store after the number of fetched messages reaches the limit.",
      "configName": "metrics.messaging.fetcher.limit",
      "configurableInWizard": false,
      "default": 200,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_messaging_meta_table",
      "label": "Metrics Messaging Meta Table",
      "description": "Name of the messaging metrics meta table",
      "configName": "metrics.messaging.meta.table",
      "required": true,
      "configurableInWizard": false,
      "default": "metrics.messaging.meta",
      "type": "string"
    },
    {
      "name": "metrics_messaging_topic_num",
      "label": "Metrics Messaging Topic Number",
      "description": "Number of topics for metrics messages. This property also sets the number of threads used to fetch and process metrics in parallel from the messaging service. For a value of N, topics will be created for metrics with names beginning at ${metrics.topic.prefix}0, ${metrics.topic.prefix}1, up to ${metrics.topic.prefix}(N-1).",
      "configName": "metrics.messaging.topic.num",
      "configurableInWizard": false,
      "default": 10,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_num_cores",
      "label": "Metrics Container Number of Virtual Cores",
      "description": "Number of virtual cores for the metrics service",
      "configName": "metrics.num.cores",
      "configurableInWizard": true,
      "default": 2,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_num_instances",
      "label": "Metrics Container Instances",
      "description": "Number of instances for the metrics service",
      "configName": "metrics.num.instances",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_processor_max_instances",
      "label": "Metrics Processor Container Max Instances",
      "description": "Maximum number of instances for metrics processor service Apache Twill runnable",
      "configName": "metrics.processor.max.instances",
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_processor_memory_mb",
      "label": "Metrics Processor Container Memory MB",
      "description": "Memory in megabytes for each metrics processor service Apache Twill runnable instance",
      "configName": "metrics.processor.memory.mb",
      "configurableInWizard": true,
      "default": 1024,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "metrics_processor_num_cores",
      "label": "Metrics Processor Container Number of Virtual Cores",
      "description": "Number of cores for metrics processor service Apache Twill runnable",
      "configName": "metrics.processor.num.cores",
      "configurableInWizard": 1,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_processor_num_instances",
      "label": "Metrics Processor Container Instances",
      "description": "Number of instances for metrics processor service Apache Twill runnable",
      "configName": "metrics.processor.num.instances",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_processor_twill_java_heap_memory_ratio",
      "label": "Metrics Processor Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the metrics processor service container",
      "configName": "metrics.processor.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "metrics_processor_twill_java_reserved_memory_mb",
      "label": "Metrics Processor Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for the metrics processor service container. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size.",
      "configName": "metrics.processor.twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 300,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "metrics_topic_prefix",
      "label": "Metrics Topic Prefix",
      "description": "Topic prefix used to publish metrics in messaging",
      "configName": "metrics.topic.prefix",
      "required": true,
      "configurableInWizard": false,
      "default": "metrics",
      "type": "string"
    },
    {
      "name": "metrics_twill_java_heap_memory_ratio",
      "label": "Metrics Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the metrics service container",
      "configName": "metrics.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "metrics_twill_java_reserved_memory_mb",
      "label": "Metrics Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for the metrics service container. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size.",
      "configName": "metrics.twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 300,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "metrics_v2_table_scan_enabled",
      "label": "Metrics V2 Table Scan Enabled",
      "description": "Enable or disable scanning v2 metrics tables. By default set to false.",
      "configName": "metrics.v2.table.scan.enabled",
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "operational_stats_extensions_dir",
      "label": "Operational Stats Extensions Dir",
      "description": "Semicolon-separated list of local directories on the CDAP Master that are scanned for operational statistics extensions",
      "configName": "operational.stats.extensions.dir",
      "configurableInWizard": false,
      "default": [
        "${cdap.home}/master/ext/operations"
      ],
      "type": "string_array",
      "separator": ";"
    },
    {
      "name": "operational_stats_refresh_interval_secs",
      "label": "Operational Stats Refresh Interval Secs",
      "description": "Number of seconds after which operational statistics should be refreshed",
      "configName": "operational.stats.refresh.interval.secs",
      "configurableInWizard": false,
      "default": "60",
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "remote_system_op_exec_threads",
      "label": "Remote System Op Exec Threads",
      "description": "Number of Netty service executor threads for the remote system operation HTTP service",
      "configName": "remote.system.op.exec.threads",
      "configurableInWizard": false,
      "default": 20,
      "type": "long",
      "min": 1
    },
    {
      "name": "remote_system_op_service_bind_address",
      "label": "Remote System Op Service Bind Address",
      "description": "Remote system operation HTTP service bind address",
      "configName": "remote.system.op.service.bind.address",
      "configurableInWizard": false,
      "default": "0.0.0.0",
      "type": "string"
    },
    {
      "name": "remote_system_op_worker_threads",
      "label": "Remote System Op Worker Threads",
      "description": "Number of Netty service IO worker threads for the remote system operation HTTP service",
      "configName": "remote.system.op.worker.threads",
      "configurableInWizard": false,
      "default": 10,
      "type": "long",
      "min": 1
    },
    {
      "name": "root_namespace",
      "label": "Root Namespace",
      "description": "Root for this CDAP instance; used as the parent (or root) node for ZooKeeper, as the directory under which all CDAP data and metadata is stored in HDFS, and as the prefix for all HBase tables created by CDAP; must be composed of alphanumeric characters",
      "configName": "root.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "cdap",
      "type": "string"
    },
    {
      "name": "router_server_address",
      "label": "Router Server Address",
      "description": "CDAP Router service address to which CDAP UI connects",
      "configName": "router.server.address",
      "required": true,
      "configurableInWizard": true,
      "default": "127.0.0.1",
      "type": "string"
    },
    {
      "name": "router_server_port",
      "label": "Router Server Port",
      "description": "CDAP Router service port, for clients and webapps",
      "configName": "router.server.port",
      "configurableInWizard": true,
      "default": 11015,
      "type": "port"
    },
    {
      "name": "router_ssl_server_port",
      "label": "Router SSL Server Port",
      "description": "CDAP Router service port for HTTPS, for clients and webapps",
      "configName": "router.ssl.server.port",
      "configurableInWizard": false,
      "default": 10443,
      "type": "port"
    },
    {
      "name": "scheduler_misfire_threshold_ms",
      "label": "Scheduler Misfire Connection Timeout Milliseconds",
      "description": "The number of milliseconds by which a schedule execution can miss its next-fire-time and still run",
      "configName": "scheduler.misfire.threshold.ms",
      "configurableInWizard": false,
      "default": 60000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "security_auth_server_announce_address",
      "label": "Security Authorization Server Announce Address",
      "description": "CDAP Authentication service announce address, in the format of host:port. This is the address that clients should use to communicate with the Authentication Server. Leave empty to use the default value generated by the Authentication Server.",
      "configName": "security.auth.server.announce.address",
      "configurableInWizard": false,
      "default": "",
      "type": "string"
    },
    {
      "name": "security_authorization_cache_max_entries",
      "label": "Security Authorization Cache Max Entries",
      "description": "Number of entries to hold in the container authorization cache. If set to 0, no caching will be performed.",
      "configName": "security.authorization.cache.max.entries",
      "configurableInWizard": false,
      "default": 100000,
      "type": "long"
    },
    {
      "name": "security_authorization_cache_ttl_secs",
      "label": "Security Authorization Cache TTL Seconds",
      "description": "The time-to-live in seconds for entries in the authorization cache used by programs and system services outside of CDAP Master.",
      "configName": "security.authorization.cache.ttl.secs",
      "configurableInWizard": false,
      "default": 300,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "security_authorization_enabled",
      "label": "Security Authorization Enabled",
      "description": "When set to true, all operations in CDAP are authorized using the authorizer implementation found at the property ${security.authorization.extension.jar.path}",
      "configName": "security.authorization.enabled",
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "security_authorization_extension_jar_path",
      "label": "Security Authorization Extension Jar Path",
      "description": "If an external authorization system is used for authorizing operations on CDAP entities, this property sets the path to the bundled JAR file containing the extension code. This jar is only used when authorization is enabled by setting ${security.authorization.enabled} to true.",
      "configName": "security.authorization.extension.jar.path",
      "configurableInWizard": false,
      "type": "string"
    },
    {
      "name": "security_authorization_extension_extra_classpath",
      "label": "Security Authorization Extension Extra Classpath",
      "description": "Extra Java classpath for CDAP security extension.",
      "configName": "security.authorization.extension.extra.classpath",
      "configurableInWizard": false,
      "type": "string_array",
      "default": [
        ""
      ],
      "separator": ":"
    },
    {
      "name": "security_enabled",
      "label": "Security Enabled",
      "description": "Determines if authentication is enabled for CDAP; if true, all requests to CDAP must provide a valid access token",
      "configName": "security.enabled",
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "security_store_provider",
      "label": "Security Store Provider",
      "description": "Backend provider for the secure store; use 'none' if no secure store",
      "configName": "security.store.provider",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "none",
      "validValues": [
        "none",
        "kms"
      ]
    },
    {
      "name": "service_retry_policy_base_delay_ms",
      "label": "Service Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "service.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 100,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "service_retry_policy_max_delay_ms",
      "label": "Service Retry Policy Maximum Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "service.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "service_retry_policy_max_retries",
      "label": "Service Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "service.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 3,
      "type": "long"
    },
    {
      "name": "service_retry_policy_max_time_secs",
      "label": "Service Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "service.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 10,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "service_retry_policy_type",
      "label": "Service Retry Policy Type",
      "description": "The type of retry policy for services",
      "configName": "service.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "none",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "spark_retry_policy_base_delay_ms",
      "label": "Spark Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "spark.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "spark_retry_policy_max_delay_ms",
      "label": "Spark Retry Policy Maximum Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "spark.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": 30000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "spark_retry_policy_max_retries",
      "label": "Spark Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "spark.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long"
    },
    {
      "name": "spark_retry_policy_max_time_secs",
      "label": "Spark Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "spark.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 600,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "spark_retry_policy_type",
      "label": "Spark Retry Policy Type",
      "description": "The type of retry policy for Spark programs",
      "configName": "spark.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "exponential.backoff",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "ssl_internal_enabled",
      "label": "SSL Internal Enabled",
      "description": "Enable SSL between Router and App Fabric",
      "configName": "ssl.internal.enabled",
      "configurableInWizard": false,
      "default":false,
      "type": "boolean"
    },
    {
      "name": "stream_container_instances",
      "label": "Stream Container Instances",
      "description": "Number of YARN container instances for the stream handler",
      "configName": "stream.container.instances",
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "stream_container_memory_mb",
      "label": "Stream Container Memory MB",
      "description": "Memory in megabytes for each YARN container that runs the stream handler",
      "configName": "stream.container.memory.mb",
      "configurableInWizard": true,
      "default": 1024,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "stream_container_num_cores",
      "label": "Stream Container Number of Virtual Cores",
      "description": "Number of virtual core for the YARN container that runs the stream handler",
      "configName": "stream.container.num.cores",
      "configurableInWizard": true,
      "default": 2,
      "type": "long",
      "min": 1
    },
    {
      "name": "stream_size_event_topic",
      "label": "Stream Size Event Topic",
      "description": "Topic name for publishing time events from stream size scheduler to the messaging system",
      "configName": "stream.size.event.topic",
      "configurableInWizard": false,
      "default": "streamsizeevent",
      "type": "string"
    },
    {
      "name": "stream_twill_java_heap_memory_ratio",
      "label": "Stream Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for the stream service container",
      "configName": "stream.twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "system_log_process_retry_policy_base_delay_ms",
      "label": "System Log Process Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "system.log.process.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "system_log_process_retry_policy_max_retries",
      "label": "System Log Process Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "system.log.process.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 1500,
      "type": "long"
    },
    {
      "name": "system_log_process_retry_policy_max_time_secs",
      "label": "System Log Process Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "system.log.process.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 1500,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "system_log_process_retry_policy_type",
      "label": "System Log Process Retry Policy Type",
      "description": "The type of retry policy for log processing",
      "configName": "system.log.process.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "fixed.delay",
      "validValues": [
        "fixed.delay"
      ]
    },
    {
      "name": "system_metrics_retry_policy_base_delay_ms",
      "label": "System Metrics Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "system.metrics.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "system_metrics_retry_policy_max_retries",
      "label": "System Metrics Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "system.metrics.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 600,
      "type": "long"
    },
    {
      "name": "system_metrics_retry_policy_max_time_secs",
      "label": "System Metrics Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "system.metrics.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 600,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "system_metrics_retry_policy_type",
      "label": "System Metrics Retry Policy Type",
      "description": "The type of retry policy for metrics publishing",
      "configName": "system.metrics.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "fixed.delay",
      "validValues": [
        "fixed.delay"
      ]
    },
    {
      "name": "time_event_topic",
      "label": "Time Event Topic",
      "description": "Topic name for publishing time events from time scheduler to the messaging system",
      "configName": "time.event.topic",
      "configurableInWizard": false,
      "default": "timeevent",
      "type": "string"
    },
    {
      "name": "twill_java_heap_memory_ratio",
      "label": "Twill Java Heap Memory Ratio",
      "description": "The minimum ratio of heap to non-heap memory for all launched Apache Twill containers. Container-specific settings also exist for CDAP system containers.",
      "configName": "twill.java.heap.memory.ratio",
      "configurableInWizard": false,
      "default": "0.6",
      "type": "double"
    },
    {
      "name": "twill_java_reserved_memory_mb",
      "label": "Twill Java Reserved Memory Mb",
      "description": "Desired reserved non-heap memory in megabytes for all launched Apache Twill containers. The actual value is bounded by the ${twill.java.heap.memory.ratio} setting of the container memory size. Container-specific settings also exist for CDAP system containers.",
      "configName": "twill.java.reserved.memory.mb",
      "configurableInWizard": false,
      "default": 300,
      "type": "memory",
      "unit": "megabytes"
    },
    {
      "name": "twill_jvm_gc_opts",
      "label": "Twill Jvm Gc Opts",
      "description": "Java garbage collection options for all Apache Twill containers; <LOG_DIR> is the location of the log directory in the container",
      "configName": "twill.jvm.gc.opts",
      "required": true,
      "configurableInWizard": false,
      "default": "-XX:+UseG1GC -verbose:gc -Xloggc:<LOG_DIR>/gc.log -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M",
      "type": "string"
    },
    {
      "name": "twill_location_cache_dir",
      "label": "Twill Cache Dir Location",
      "description": "The relative directory name on the distributed file system for Apache Twill to cache generated files, to speed up launching applications. This directory is relative to ${root.namespace}/twill on the file system.",
      "configName": "twill.location.cache.dir",
      "required": true,
      "configurableInWizard": false,
      "default": ".cache",
      "type": "string"
    },
    {
      "name": "twill_no_container_timeout",
      "label": "Twill No Container Timeout",
      "description": "Duration in milliseconds to wait for at least one container for Apache Twill runnable",
      "configName": "twill.no.container.timeout",
      "configurableInWizard": false,
      "default": 120000,
      "type": "long"
    },
    {
      "name": "twill_zookeeper_namespace",
      "label": "Twill ZooKeeper Namespace",
      "description": "ZooKeeper namespace prefix for Apache Twill",
      "configName": "twill.zookeeper.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "/twill",
      "type": "string"
    },
    {
      "name": "worker_retry_policy_base_delay_ms",
      "label": "Worker Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "worker.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "worker_retry_policy_max_delay_ms",
      "label": "Worker Retry Policy Maximum Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "worker.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": 30000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "worker_retry_policy_max_retries",
      "label": "Worker Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "worker.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long"
    },
    {
      "name": "worker_retry_policy_max_time_secs",
      "label": "Worker Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "worker.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 600,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "worker_retry_policy_type",
      "label": "Worker Retry Policy Type",
      "description": "The type of retry policy for workers",
      "configName": "worker.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "exponential.backoff",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "workflow_retry_policy_base_delay_ms",
      "label": "Workflow Retry Policy Base Delay Milliseconds",
      "description": "The base delay between retries in milliseconds",
      "configName": "workflow.retry.policy.base.delay.ms",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "workflow_retry_policy_max_delay_ms",
      "label": "Workflow Retry Policy Maximum Delay Milliseconds",
      "description": "The maximum delay between retries in milliseconds",
      "configName": "workflow.retry.policy.max.delay.ms",
      "configurableInWizard": false,
      "default": 30000,
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "workflow_retry_policy_max_retries",
      "label": "Workflow Retry Policy Maximum Retries",
      "description": "The maximum number of retries to attempt before aborting",
      "configName": "workflow.retry.policy.max.retries",
      "configurableInWizard": false,
      "default": 1000,
      "type": "long"
    },
    {
      "name": "workflow_retry_policy_max_time_secs",
      "label": "Workflow Retry Policy Maximum Time Seconds",
      "description": "The maximum elapsed time in seconds before retries are aborted",
      "configName": "workflow.retry.policy.max.time.secs",
      "configurableInWizard": false,
      "default": 600,
      "type": "long",
      "unit": "seconds"
    },
    {
      "name": "workflow_retry_policy_type",
      "label": "Workflow Retry Policy Type",
      "description": "The type of retry policy for workflows",
      "configName": "workflow.retry.policy.type",
      "configurableInWizard": false,
      "type": "string_enum",
      "default": "exponential.backoff",
      "validValues": [
        "none",
        "fixed.delay",
        "exponential.backoff"
      ]
    },
    {
      "name": "zookeeper_client_startup_timeout_millis",
      "label": "Zookeeper Client Startup Timeout Millis",
      "description": "Duration in milliseconds to wait for a successful connection to a server in the ZooKeeper quorum",
      "configName": "zookeeper.client.startup.timeout.millis",
      "configurableInWizard": false,
      "default": "60000",
      "type": "long",
      "unit": "milliseconds"
    },
    {
      "name": "zookeeper_session_timeout_millis",
      "label": "ZooKeeper Session Timeout Millis",
      "description": "ZooKeeper session timeout in milliseconds",
      "configName": "zookeeper.session.timeout.millis",
      "configurableInWizard": false,
      "default": 40000,
      "type": "long"
    }
  ],
  "rollingRestart": {
    "nonWorkerSteps": [
      {
        "roleName": "CDAP_AUTH_SERVER"
      },
      {
        "roleName": "CDAP_KAFKA"
      },
      {
        "roleName": "CDAP_MASTER"
      },
      {
        "roleName": "CDAP_ROUTER"
      },
      {
        "roleName": "CDAP_UI"
      }
    ]
  },
  "roles": [
    {
      "name": "CDAP_ROUTER",
      "jvmBased": "true",
      "label": "CDAP Gateway/Router Service",
      "pluralLabel": "CDAP Gateway/Router Services",
      "parameters": [
        {
          "name": "router_bind_address",
          "label": "Router Bind Address",
          "description": "CDAP Router service bind address",
          "configName": "router.bind.address",
          "required": true,
          "configurableInWizard": true,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "router_bind_port",
          "label": "Router Bind Port",
          "description": "CDAP Router service bind port",
          "configName": "router.bind.port",
          "configurableInWizard": true,
          "default": 11015,
          "type": "port"
        },
        {
          "name": "router_java_heapmax",
          "label": "Router Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "type": "memory",
          "unit": "bytes",
          "min": 2147483648,
          "default": 4294967296,
          "scaleFactor": 1.3
        },
        {
          "name": "router_ssl_bind_port",
          "label": "Router SSL Bind Port",
          "description": "CDAP Router service bind port for HTTPS",
          "configName": "router.ssl.bind.port",
          "configurableInWizard": false,
          "default": 10443,
          "type": "port"
        },
        {
          "name": "router_userservice_fallback_strategy",
          "label": "Router User Service Fallback Strategy",
          "description": "If a RouteConfig is not found for a particular user service, this property is used to set the fallback routing strategy. Allowed options: \"random\", \"smallest\", \"largest\", or \"drop\". A string comparison of the versions of the user service is used for \"smallest\" or \"largest\". The \"drop\" option will not route the request to any service and will return \"service not found\".",
          "configName": "router.userservice.fallback.strategy",
          "configurableInWizard": false,
          "default": "random",
          "type": "string_enum",
          "validValues": [
            "random",
            "smallest",
            "largest",
            "drop"
          ]
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "router_java_heapmax", "debugger_utility_class", "debugger_utility_args", "ssl_server_keystore_keypassword", "ssl_server_keystore_password", "ssl_server_keystore_location", "csd_compatibility_check_enabled" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.server.log.dirs",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              }
            ]
          },
          {
            "filename": "cdap-security.xml",
            "configFormat": "hadoop_xml",
            "includedParams": [ "ssl_server_keystore_keypassword", "ssl_server_keystore_password", "ssl_server_keystore_location" ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_server_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "kerberosPrincipals": [
        {
          "name": "cdap_principal",
          "primary": "cdap",
          "instance": "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "router.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "sslServer": {
        "keystoreFormat": "jks",
        "keyIdentifier": "cdap_router",
        "enabledConfigName": "ssl.external.enabled",
        "keystoreLocationConfigName": "router.ssl.keystore.path",
        "keyPasswordOptionality" : "required",
        "keystoreKeyPasswordConfigName": "router.ssl.keystore.keypassword",
        "keystorePasswordConfigName": "router.ssl.keystore.password"
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "router" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "ROUTER_JAVA_HEAPMAX": "-Xmx${router_java_heapmax}",
          "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
        }
      }
    },
    {
      "name": "CDAP_KAFKA",
      "jvmBased": "true",
      "label": "CDAP Kafka Service",
      "pluralLabel": "CDAP Kafka Services",
      "parameters": [
        {
          "name": "kafka_java_heapmax",
          "label": "Kafka Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "type": "memory",
          "unit": "bytes",
          "min": 1073741824,
          "default": 2147483648,
          "scaleFactor": 1.3
        },
        {
          "name": "kafka_server_default_replication_factor",
          "label": "Kafka Server Default Replication Factor",
          "description": "CDAP Kafka service replication factor; used to replicate Kafka messages across multiple machines to prevent data loss in the event of a hardware failure. The recommended setting is to run at least two CDAP Kafka servers. If you are running two CDAP Kafka servers, set this value to 2; otherwise, set it to the maximum number of tolerated machine failures plus one (assuming you have that number of machines).",
          "configName": "kafka.server.default.replication.factor",
          "configurableInWizard": false,
          "default": 1,
          "type": "long",
          "min": 1
        },
        {
          "name": "kafka_server_host_name",
          "label": "Kafka Server Host Name",
          "description": "CDAP Kafka service bind address",
          "configName": "kafka.server.host.name",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "kafka_server_log_flush_interval_messages",
          "label": "Kafka Server Log Flush Interval Messages",
          "description": "The interval length at which will force an fsync of data written to the log",
          "configName": "kafka.server.log.flush.interval.messages",
          "configurableInWizard": false,
          "default": 10000,
          "type": "long",
          "min": 1
        },
        {
          "name": "kafka_server_log_retention_hours",
          "label": "Kafka Server Log Retention Hours",
          "description": "The number of hours to keep a log file before deleting it",
          "configName": "kafka.server.log.retention.hours",
          "configurableInWizard": false,
          "default": 24,
          "type": "long",
          "min": 0,
          "unit": "hours"
        },
        {
          "name": "kafka_server_num_partitions",
          "label": "Kafka Server Number of Partitions",
          "description": "Default number of partitions for a topic",
          "configName": "kafka.server.num.partitions",
          "configurableInWizard": false,
          "default": 10,
          "type": "long",
          "min": 1
        },
        {
          "name": "kafka_server_port",
          "label": "Kafka Server Port",
          "description": "CDAP Kafka service bind port",
          "configName": "kafka.server.port",
          "configurableInWizard": true,
          "default": 9092,
          "type": "port"
        },
        {
          "name": "kafka_server_zookeeper_connection_timeout_ms",
          "label": "Kafka Server Zookeeper Connection Timeout Milliseconds",
          "description": "Maximum time in milliseconds that the client will wait to establish a connection to Zookeeper",
          "configName": "kafka.server.zookeeper.connection.timeout.ms",
          "configurableInWizard": false,
          "default": 1000000,
          "type": "long",
          "unit": "milliseconds"
        },
        {
          "name": "kafka_zookeeper_namespace",
          "label": "Kafka ZooKeeper Namespace",
          "description": "CDAP Kafka service ZooKeeper namespace",
          "configName": "kafka.zookeeper.namespace",
          "required": true,
          "configurableInWizard": false,
          "default": "kafka",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "kafka_java_heapmax", "debugger_utility_class", "debugger_utility_args", "csd_compatibility_check_enabled" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.server.log.dirs",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_server_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "kafka.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "kafka-server" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "KAFKA_JAVA_HEAPMAX": "-Xmx${kafka_java_heapmax}",
          "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
        }
      }
    },
    {
      "name": "CDAP_MASTER",
      "jvmBased": "true",
      "label": "CDAP Master Service",
      "pluralLabel": "CDAP Master Services",
      "parameters": [
        {
          "name": "app_bind_port",
          "label": "App Bind Port",
          "description": "App Fabric service bind port; if 0 binds to a random port",
          "configName": "app.bind.port",
          "configurableInWizard": false,
          "default": 0,
          "type": "long",
          "max": 65535
        },
        {
          "name": "app_program_metrics_enabled",
          "label": "App Program Metrics Enabled",
          "description": "Enable or disable emitting metrics from user application programs, by default set to true.",
          "configName": "app.program.metrics.enabled",
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "app_program_spark_yarn_client_rewrite_enabled",
          "label": "App Program Spark Yarn Client Rewrite Enabled",
          "description": "Specify whether to rewrite the yarn.client class in Spark to work around the issue SPARK-13441 in CDH clusters",
          "configName": "app.program.spark.yarn.client.rewrite.enabled",
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "app_ssl_bind_port",
          "label": "App SSL Bind Port",
          "description": "App Fabric service bind port",
          "configName": "app.ssl.bind.port",
          "configurableInWizard": false,
          "default": 30443,
          "type": "port"
        },
        {
          "name": "data_tx_bind_port",
          "label": "Transaction Client Bind Port",
          "description": "Transaction service bind port; if 0 binds to a random port",
          "configName": "data.tx.bind.port",
          "configurableInWizard": false,
          "default": 0,
          "type": "long",
          "max": 65535
        },
        {
          "name": "dataset_executor_bind_port",
          "label": "Dataset Executor Bind Port",
          "description": "Dataset executor bind port; if 0 binds to a random port",
          "configName": "dataset.executor.bind.port",
          "configurableInWizard": false,
          "default": 0,
          "type": "long",
          "max": 65535
        },
        {
          "name": "explore_service_bind_port",
          "label": "Explore Service Bind Port",
          "description": "CDAP Explore service bind port; if 0 binds to a random port",
          "configName": "explore.service.bind.port",
          "configurableInWizard": false,
          "default": 0,
          "type": "long",
          "max": 65535
        },
        {
          "name": "log_kafka_topic",
          "label": "Log Kafka Topic",
          "description": "Kafka topic name used to publish logs",
          "configName": "log.kafka.topic",
          "required": true,
          "configurableInWizard": false,
          "default": "logs.user-v2",
          "type": "string"
        },
	{
	  "name": "log_pipeline_cdap_dir_permissions",
	  "label": "Log Pipeline CDAP Directory Permissions",
	  "description": "Permissions to use for directories created by the system log appender",
	  "configName": "log.pipeline.cdap.dir.permissions",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "700",
	  "type": "string"
	},
	{
	  "name": "log_pipeline_cdap_file_max_lifetime_ms",
	  "label": "Log Pipeline CDAP File Maximum Lifetime Milliseconds",
	  "description": "Maximum time in milliseconds a file is kept open by the system log appender",
	  "configName": "log.pipeline.cdap.file.max.lifetime.ms",
	  "configurableInWizard": false,
	  "default": 21600000,
	  "type": "long",
	  "unit": "milliseconds"
	},
	{
	  "name": "log_pipeline_cdap_file_max_size_bytes",
	  "label": "Log Pipeline CDAP File Maximum Size Bytes",
	  "description": "Maximum size in bytes of a file kept open by the system log appender",
	  "configName": "log.pipeline.cdap.file.max.size.bytes",
	  "configurableInWizard": false,
	  "default": 104857600,
	  "type": "long",
	  "unit": "bytes"
	},
	{
	  "name": "log_pipeline_cdap_file_permissions",
	  "label": "Log Pipeline CDAP File Permissions",
	  "description": "Permissions to set for files created by the system log appender",
	  "configName": "log.pipeline.cdap.file.permissions",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "600",
	  "type": "string"
	},
	{
	  "name": "log_pipeline_cdap_file_sync_interval_bytes",
	  "label": "Log Pipeline CDAP File Sync Interval Bytes",
	  "description": "Number of bytes for the sync interval setting of the Avro file written by the system log appender",
	  "configName": "log.pipeline.cdap.file.sync.interval.bytes",
	  "configurableInWizard": false,
	  "default": 10485760,
	  "type": "long",
	  "unit": "bytes"
	},
	{
	  "name": "log_process_pipeline_auto_buffer_ratio",
	  "label": "Log Process Pipeline Auto Buffer Ratio",
	  "description": "The ratio of total memory used for determining processing pipeline buffer size. This property is only used if ${log.process.pipeline.buffer.size} is set to zero and the value should be greater than zero and less than one.",
	  "configName": "log.process.pipeline.auto.buffer.ratio",
	  "configurableInWizard": false,
	  "default": 0.7,
	  "type": "double",
	  "min": 0,
	  "max": 1
	},
	{
	  "name": "log_process_pipeline_buffer_size",
	  "label": "Log Process Pipeline Buffer Size",
	  "description": "The internal buffer size in bytes for each log processing pipeline. Setting it to zero means the system will determine it dynamically based on the container size as given by ${log.saver.container.memory.mb}.",
	  "configName": "log.process.pipeline.buffer.size",
	  "configurableInWizard": false,
	  "default": 0,
	  "type": "long",
	  "unit": "bytes"
	},
	{
	  "name": "log_process_pipeline_checkpoint_interval_ms",
	  "label": "Log Process Pipeline Checkpoint Interval Milliseconds",
	  "description": "The time between log processing pipeline checkpoints in milliseconds",
	  "configName": "log.process.pipeline.checkpoint.interval.ms",
	  "configurableInWizard": false,
	  "default": 10000,
	  "type": "long",
	  "unit": "milliseconds"
	},
	{
	  "name": "log_process_pipeline_config_dir",
	  "label": "Log Process Pipeline Config Directory",
	  "description": "A local directory on the CDAP Master that is scanned for log processing pipeline configurations. Each pipeline is defined by a file in the logback XML format, with \".xml\" as the file name extension.",
	  "configName": "log.process.pipeline.config.dir",
	  "configurableInWizard": false,
	  "default": "/opt/cdap/master/ext/logging/config",
	  "type": "path",
	  "pathType": "localDataDir"
	},
	{
	  "name": "log_process_pipeline_event_delay_ms",
	  "label": "Log Process Pipeline Event Delay Milliseconds",
	  "description": "The time a log event stays in the log processing pipeline buffer before writing out to log appenders in milliseconds. A longer delay will result in better time ordering of log events before presenting to log appenders but will consume more memory.",
	  "configName": "log.process.pipeline.event.delay.ms",
	  "configurableInWizard": false,
	  "default": 2000,
	  "type": "long",
	  "unit": "milliseconds"
	},
	{
	  "name": "log_process_pipeline_kafka_fetch_size",
	  "label": "Log Process Pipeline Kafka Fetch Size",
	  "description": "The size of the buffer for fetching log events from Kafka per topic partition in bytes",
	  "configName": "log.process.pipeline.kafka.fetch.size",
	  "configurableInWizard": false,
	  "default": 1048576,
	  "type": "long",
	  "unit": "bytes"
	},
	{
	  "name": "log_process_pipeline_lib_dir",
	  "label": "Log Process Pipeline Library Directory",
	  "description": "Comma-separated list of local directories on the CDAP Master scanned for additional library JAR files to be included for log processing",
	  "configName": "log.process.pipeline.lib.dir",
	  "configurableInWizard": false,
	  "default": [
	    "/opt/cdap/master/ext/logging/lib"
	  ],
	  "type": "path_array",
	  "separator": ",",
	  "pathType": "localDataDir"
	},
	{
	  "name": "log_process_pipeline_logger_cache_size",
	  "label": "Log Process Pipeline Logger Cache Size",
	  "description": "The number of loggers that each log processing pipeline will cache.",
	  "configName": "log.process.pipeline.logger.cache.size",
	  "configurableInWizard": false,
	  "default": 1000,
	  "type": "long"
	},
	{
	  "name": "log_process_pipeline_logger_cache_expiration_ms",
	  "label": "Log Process Pipeline Logger Cache Expiration Milliseconds",
	  "description": "Logger cache entry expiration time in milliseconds.",
	  "configName": "log.process.pipeline.logger.cache.expiration.ms",
	  "configurableInWizard": false,
	  "default": 300000,
	  "type": "long",
	  "unit": "milliseconds"
	},
	{
	  "name": "log_publish_partition_key",
	  "label": "Log Publish Partition Key",
	  "description": "Publish logs from an application or a program to the same partition. Valid values are \"application\" or \"program\". If set to \"application\", logs from all the programs of an application go to the same partition. If set to \"program\", logs from the same program go to the same partition. Changes to this property requires restarting of all CDAP applications.",
	  "configName": "log.publish.partition.key",
	  "configurableInWizard": false,
	  "type": "string_enum",
	  "default": "program",
	  "validValues": [
	    "application",
	    "program"
	  ]
	},
        {
          "name": "master_collect_containers_log",
          "label": "Master Collect Container Logs",
          "description": "Determines if master service container logs are streamed back to the CDAP Master process log",
          "configName": "master.collect.containers.log",
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "master_collect_app_containers_log_level",
          "label": "Master Collect Application Container Logs Level",
          "description": "The log level of application container logs that are streamed back to the CDAP Master process log. The levels supported are [ ALL, TRACE, DEBUG, INFO, WARN, ERROR, OFF ].",
          "configName": "master.collect.app.containers.log.level",
          "configurableInWizard": false,
          "default": "ERROR",
          "type": "string_enum",
          "validValues": [
            "ALL",
            "TRACE",
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR",
            "OFF"
          ]
        },
        {
          "name": "master_java_heapmax",
          "label": "Master Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "type": "memory",
          "unit": "bytes",
          "min": 2147483648,
          "default": 4294967296,
          "scaleFactor": 1.3
        },
        {
          "name": "master_manage_hbase_coprocessors",
          "label": "Master Manage HBase Coprocessors",
          "description": "Whether CDAP Master should manage HBase coprocessors. This should only be set to false if you are managing coprocessors yourself in order to support rolling HBase upgrades.",
          "configName": "master.manage.hbase.coprocessors",
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "master_services_bind_address",
          "label": "Master Services Bind Address",
          "description": "Bind address for app fabric service and dataset service",
          "configName": "master.services.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "master_startup_checks_enabled",
          "label": "Master Startup Checks Enabled",
          "description": "Whether checks should be run before startup to determine if the CDAP Master can be run correctly. Which checks are run is determined by the ${master.startup.checks.packages} and ${master.startup.checks.classes} settings. If any checks fail, the CDAP Master will fail to start instead of waiting for the problem to be fixed. This setting only affects Distributed CDAP.",
          "configName": "master.startup.checks.enabled",
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "master_startup_checks_packages",
          "label": "Master Startup Checks Packages",
          "description": "Comma-separated list of packages containing checks that will be run before the CDAP Master starts up. If any of the checks fails, the CDAP Master will not start up. Checks will only be run if master.startup.checks.enabled is set to true.",
          "configName": "master.startup.checks.packages",
          "required": true,
          "configurableInWizard": false,
          "default": "co.cask.cdap.master.startup",
          "type": "string"
        },
        {
          "name": "master_startup_checks_classes",
          "label": "Master Startup Checks Classes",
          "description": "Comma-separated list of classnames for checks that will be run before the CDAP Master starts up. If any of the checks fails, the CDAP Master will not start up. Checks will only be run if ${master.startup.checks.enabled} is set to true.",
          "configName": "master.startup.checks.classes",
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "master_startup_service_timeout_seconds",
          "label": "Master Startup Service Timeout Seconds",
          "description": "Timeout in seconds for master services to wait for their dependent services to be available. For example, the dataset executor master service requires the transaction service, and will wait for the transaction service to become available while it is starting up. If the timeout is hit, the service will fail to start and the master service will shut itself down. If set to 0 or below, master services will not wait for their dependent services to start before starting themselves.",
          "configName": "master.startup.service.timeout.seconds",
          "configurableInWizard": false,
          "default": 600,
          "type": "long",
          "unit": "seconds"
        },
        {
          "name": "metadata_service_bind_address",
          "label": "Metadata Service Bind Address",
          "description": "Metadata HTTP service bind address",
          "configName": "metadata.service.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "metadata_service_bind_port",
          "label": "Metadata Service Bind Port",
          "description": "Metadata HTTP service bind port; if 0 binds to a random port",
          "configName": "metadata.service.bind.port",
          "configurableInWizard": false,
          "default": 0,
          "type": "long",
          "max": 65535
        },
        {
          "name": "metrics_query_bind_port",
          "label": "Metrics Query Bind Port",
          "description": "Metrics Query service bind port",
          "configName": "metrics.query.bind.port",
          "configurableInWizard": false,
          "default": 45005,
          "type": "port"
        },
        {
          "name": "notification_topic",
          "label": "Notification Topic",
          "description": "Topic name used to publish notifications",
          "configName": "notification.topic",
          "required": true,
          "configurableInWizard": false,
          "default": "notifications",
          "type": "string"
        },
        {
          "name": "security_keytab_path",
          "label": "Security Keytab Path",
          "description": "The location of kerberos keytabs used for impersonation. The location can contain ${name} which will be replaced by the short user name of the principal being impersonated.",
          "configName": "security.keytab.path",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "stream_bind_port",
          "label": "Stream Bind Port",
          "description": "Stream HTTP service bind port; if 0 binds to a random port",
          "configName": "stream.bind.port",
          "configurableInWizard": false,
          "default": 0,
          "type": "long",
          "max": 65535
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "master_java_heapmax", "debugger_utility_class", "debugger_utility_args", "csd_compatibility_check_enabled" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.server.log.dirs",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              },
              {
                "key": "app.adapter.dir",
                "value": "{{COMPONENT_HOME}}/plugins"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_server_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ],
        "auxConfigGenerators": [
          {
            "filename": "logback-container.xml",
            "sourceFilename": "aux/logback-container.xml"
          }
        ]
      },
      "kerberosPrincipals": [
        {
          "name": "cdap_principal",
          "primary": "cdap",
          "instance": "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "master.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "commands": [
        {
          "name": "master_upgrade_tool",
          "label": "Run CDAP Upgrade",
          "description": "Run after upgrading the CDAP Parcel, and before starting CDAP",
          "expectedExitCodes": [0],
          "requiredRoleState": "stopped",
          "commandRunner": {
            "program": "scripts/cdap-control.sh",
            "args": ["upgrade"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES": "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "CDAP_JAVA_OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}",
              "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
            }
          }
        },
        {
          "name": "master_upgrade_hbase_tool",
          "label": "Run Post-CDH Upgrade Tasks",
          "description": "Run after upgrading CDH, after disabling CDAP HBase Tables, and before starting CDAP",
          "expectedExitCodes": [0],
          "requiredRoleState": "stopped",
          "commandRunner": {
            "program": "scripts/cdap-control.sh",
            "args": ["upgrade_hbase"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES" : "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "CDAP_JAVA_OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}",
              "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
            }
          }
        },
        {
          "name": "master_post_upgrade_tasks",
          "label": "Run Post-CDAP Upgrade Tasks",
          "description": "Run after upgrading CDAP, and after starting CDAP the first time",
          "expectedExitCodes": [0],
          "requiredRoleState": "running",
          "commandRunner": {
            "program": "scripts/cdap-control.sh",
            "args": ["postupgrade"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES": "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "CDAP_JAVA_OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}",
              "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
            }
          }
        },
        {
          "name": "master_debugger_utility",
          "label": "Run Configured CDAP Debugger Utility",
          "description": "Run the configured CDAP Debugger Utility. See debugger.utility.class",
          "expectedExitCodes": [0],
          "requiredRoleState": "running",
          "commandRunner": {
            "program": "scripts/cdap-control.sh",
            "args": ["debugger_utility"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES": "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "CDAP_JAVA_OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}",
              "MAIN_CLASS": "${debugger_utility_class}",
              "MAIN_CLASS_ARGS": "${debugger_utility_args}",
              "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
            }
          }
        }
      ],
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "master" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}",
          "STARTUP_CHECKS_ENABLED": "${master_startup_checks_enabled}",
          "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
        }
      },
      "stopRunner": {
        "timeout": "300000"
      }
    },
    {
      "name": "CDAP_UI",
      "label": "CDAP UI Service",
      "pluralLabel": "CDAP UI Services",
      "externalLink": {
        "name": "cdap_ui",
        "label": "CDAP UI",
        "url": "http://${host}:${dashboard_bind_port}",
        "secureUrl": "https://${host}:${dashboard_ssl_bind_port}"
      },
      "parameters": [
        {
          "name": "dashboard_bind_address",
          "label": "CDAP UI Bind Address",
          "description": "CDAP UI bind address",
          "configName": "dashboard.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "dashboard_bind_port",
          "label": "CDAP UI Bind Port",
          "description": "CDAP UI bind port",
          "configName": "dashboard.bind.port",
          "configurableInWizard": true,
          "default": 11011,
          "type": "port"
        },
        {
          "name": "dashboard_router_check_timeout_secs",
          "label": "Dashboard Router Check Timeout Seconds",
          "description": "Interval in seconds that the CDAP UI waits before exiting when unable to connect to the CDAP Router service on startup; use a timeout of 0 to wait indefinitely",
          "configName": "dashboard.router.check.timeout.secs",
          "configurableInWizard": false,
          "default": 180,
          "type": "long",
          "unit": "seconds"
        },
        {
          "name": "dashboard_ssl_bind_port",
          "label": "Dashboard SSL Bind Port",
          "description": "CDAP UI bind port for HTTPS",
          "configName": "dashboard.ssl.bind.port",
          "configurableInWizard": false,
          "default": 9443,
          "type": "port"
        },
        {
          "name": "dashboard_ssl_disable_cert_check",
          "label": "Dashboard SSL Disable Cert Check",
          "description": "True to disable SSL certificate check from the CDAP UI",
          "configName": "dashboard.ssl.disable.cert.check",
          "configurableInWizard": false,
          "default": false,
          "type": "boolean"
        },
        {
          "name": "market_base_url",
          "label": "Market Base Url",
          "description": "The base URL of the Cask Market used by the CDAP UI for the Cask Market RESTful API. The default value shown is that of the public Cask Market.",
          "configName": "market.base.url",
          "configurableInWizard": false,
          "default": "http://market.cask.co/v2",
          "type": "uri"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "debugger_utility_class", "debugger_utility_args", "ssl_server_certificate_location", "ssl_server_privatekey_location", "csd_compatibility_check_enabled" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.server.log.dirs",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              }
            ]
          },
          {
            "filename": "cdap-security.xml",
            "configFormat": "hadoop_xml",
            "includedParams": [ "ssl_server_certificate_location", "ssl_server_privatekey_location" ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_server_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "sslServer": {
        "keystoreFormat": "pem",
        "enabledConfigName": "ssl.external.enabled",
        "certificateLocationConfigName": "dashboard.ssl.cert",
        "privateKeyLocationConfigName": "dashboard.ssl.key"
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "ui" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
        }
      }
    },
    {
      "name": "CDAP_AUTH_SERVER",
      "jvmBased": "true",
      "label": "CDAP Security Auth Service",
      "pluralLabel": "CDAP Security Auth Services",
      "topology": {
        "minInstances": "0"
      },
      "parameters": [
        {
          "name": "auth_java_heapmax",
          "label": "Auth Server Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "type": "memory",
          "unit": "bytes",
          "min": 1073741824,
          "default": 2147483648,
          "scaleFactor": 1.3
        },
        {
          "name": "security_auth_server_bind_address",
          "label": "CDAP Authentication service bind address",
          "description": "CDAP Authentication service bind address",
          "configName": "security.auth.server.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "security_auth_server_bind_port",
          "label": "Security Auth Server Bind Port",
          "description": "CDAP Authentication service bind port",
          "configName": "security.auth.server.bind.port",
          "configurableInWizard": false,
          "default": 10009,
          "type": "port"
        },
        {
          "name": "security_auth_server_ssl_bind_port",
          "label": "Security Auth Server SSL Bind Port",
          "description": "CDAP Authentication service bind port for HTTPS",
          "configName": "security.auth.server.ssl.bind.port",
          "configurableInWizard": false,
          "default": 10010,
          "type": "port"
        },
        {
          "name": "security_authentication_basic_realmfile",
          "label": "Security Authentication Basic Realm File",
          "description": "Username and password file to use when basic authentication is configured",
          "configName": "security.authentication.basic.realmfile",
          "configurableInWizard": false,
          "default": "",
          "type": "path",
          "pathType": "localDataFile"
        },
        {
          "name": "security_authentication_handler_bindDn",
          "label": "Security Authentication Handler BindDn",
          "description": "The Distinguished Name used to bind to the LDAP server and search the directory",
          "configName": "security.authentication.handler.bindDn",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "security_authentication_handler_bindPassword",
          "label": "Security Authentication Handler BindPassword",
          "description": "The password used to bind to the LDAP server",
          "configName": "security.authentication.handler.bindPassword",
          "configurableInWizard": false,
          "type": "password"
        },
        {
          "name": "security_authentication_handler_debug",
          "label": "Security Authentication Handler Debug",
          "description": "Set to true to enable debugging",
          "configName": "security.authentication.handler.debug",
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "security_authentication_handler_hostname",
          "label": "Security Authentication Handler Hostname",
          "description": "LDAP server host",
          "configName": "security.authentication.handler.hostname",
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handler_port",
          "label": "Security Authentication Handler Port",
          "description": "LDAP server port",
          "configName": "security.authentication.handler.port",
          "configurableInWizard": false,
          "default": "389",
          "type": "port"
        },
        {
          "name": "security_authentication_handler_roleBaseDn",
          "label": "Security Authentication Handler RoleBaseDn",
          "description": "Distinguished Name of the root of the LDAP tree to search for group memberships",
          "configName": "security.authentication.handler.roleBaseDn",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "security_authentication_handler_roleMemberAttribute",
          "label": "Security Authentication Handler RoleMemberAttribute",
          "description": "LDAP Object attribute specifying the group members",
          "configName": "security.authentication.handler.roleMemberAttribute",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "security_authentication_handler_roleNameAttribute",
          "label": "Security Authentication Handler RoleNameAttribute",
          "description": "LDAP Object attribute specifying the group name",
          "configName": "security.authentication.handler.roleNameAttribute",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "security_authentication_handler_roleObjectClass",
          "label": "Security Authentication Handler RoleObjectClass",
          "description": "LDAP Object class used to store group entries",
          "configName": "security.authentication.handler.roleObjectClass",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "security_authentication_handler_userBaseDn",
          "label": "Security Authentication Handler userBaseDn",
          "description": "Distinguished Name of the root for user account entries in the LDAP directory",
          "configName": "security.authentication.handler.userBaseDn",
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handler_userIdAttribute",
          "label": "Security Authentication Handler UserIdAttribute",
          "description": "LDAP Object attribute containing the username",
          "configName": "security.authentication.handler.userIdAttribute",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "security_authentication_handler_userObjectClass",
          "label": "Security Authentication Handler userObjectClass",
          "description": "LDAP Object class used to store user entries",
          "configName": "security.authentication.handler.userObjectClass",
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handler_userPasswordAttribute",
          "label": "Security Authentication Handler UserPasswordAttribute",
          "description": "LDAP Object attribute containing the user password",
          "configName": "security.authentication.handler.userPasswordAttribute",
          "configurableInWizard": false,
          "type": "string"
        },
        {
          "name": "security_authentication_handler_userRdnAttribute",
          "label": "Security Authentication Handler userRdnAttribute",
          "description": "LDAP Object attribute for username when search by role DN",
          "configName": "security.authentication.handler.userRdnAttribute",
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handlerClassName",
          "label": "Security Authentication Handler Class Name",
          "description": "Name of the authentication implementation to use to validate user credentials",
          "configName": "security.authentication.handlerClassName",
          "configurableInWizard": false,
          "default": "co.cask.cdap.security.server.BasicAuthenticationHandler",
          "type": "string_enum",
          "validValues": [
            "co.cask.cdap.security.server.BasicAuthenticationHandler",
            "co.cask.cdap.security.server.LDAPAuthenticationHandler",
            "co.cask.cdap.security.server.JASPIAuthenticationHandler"
          ]
        },
        {
          "name": "security_authentication_loginmodule_className",
          "label": "Security Authentication Login Module Class Name",
          "description": "JAAS LoginModule implementation to use when co.cask.security.server.JAASAuthenticationHandler is configured for ${security.authentication.handlerClassName}",
          "configName": "security.authentication.loginmodule.className",
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "auth_java_heapmax", "debugger_utility_class", "debugger_utility_args", "ssl_server_keystore_keypassword", "ssl_server_keystore_password", "ssl_server_keystore_location", "security_authentication_handler_bindDn", "security_authentication_handler_bindPassword", "csd_compatibility_check_enabled" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.server.log.dirs",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              }
            ]
          },
          {
            "filename": "cdap-security.xml",
            "configFormat": "hadoop_xml",
            "includedParams": [ "ssl_server_keystore_keypassword", "ssl_server_keystore_password", "ssl_server_keystore_location", "security_authentication_handler_bindDn", "security_authentication_handler_bindPassword" ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_server_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "kerberosPrincipals": [
        {
          "name": "cdap_principal",
          "primary": "cdap",
          "instance": "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "auth-server.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "sslServer": {
        "keystoreFormat": "jks",
        "keyIdentifier": "cdap_auth",
        "enabledConfigName": "ssl.external.enabled",
        "keystoreLocationConfigName": "security.auth.server.ssl.keystore.path",
        "keyPasswordOptionality" : "required",
        "keystoreKeyPasswordConfigName": "security.auth.server.ssl.keystore.keypassword",
        "keystorePasswordConfigName": "security.auth.server.ssl.keystore.password"
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "auth-server" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "AUTH_JAVA_HEAPMAX": "-Xmx${auth_java_heapmax}",
          "CSD_COMPATIBILITY_CHECK_ENABLED": "${csd_compatibility_check_enabled}"
        }
      }
    }
  ]
}
