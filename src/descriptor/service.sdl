{
  "name": "CDAP",
  "label": "Cask DAP",
  "description": "Cask Data Application Platform",
  "version": "3.3.0",
  "runAs": {
    "user": "cdap",
    "group": "cdap"
  },
  "maxInstances": 1,
  "compatibility": {
    "generation": 1,
    "cdhVersion": {
      "min": "5",
      "max": 5
    }
  },
  "parcel" : {
    "repoUrl": "http://repository.cask.co/parcels/cdap/3.3/",
    "requiredTags" : [ "cdh", "cdap" ]
  },
  "icon" : "images/icon.png",
  "serviceDependencies" : [
    {"name" : "ZOOKEEPER", "required" : "true" },
    {"name" : "HDFS", "required" : "true"},
    {"name" : "YARN", "required" : "true"},
    {"name" : "HBASE", "required" : "true"},
    {"name" : "HIVE", "required" : "false"}
  ],
  "rolesWithExternalLinks": [
    "CDAP_UI"
  ],
  "hdfsDirs" : [
    {
      "name" : "CreateCdapHdfsDirCommand",
      "label" : "Create CDAP Namespace Dir",
      "description" : "Creates the top-level CDAP namespace directory in HDFS",
      "directoryDescription" : "CDAP HDFS namespace directory",
      "path" : "/${root_namespace}",
      "permissions" : "0755"
    },
    {
      "name" : "CreateCdapUserHdfsDirCommand",
      "label" : "Create CDAP User Dir",
      "description" : "Creates the /user/cdap HDFS directory needed for mapreduce",
      "directoryDescription" : "CDAP HDFS user directory",
      "path" : "/user/${hdfs_user}",
      "permissions" : "0755"
    }
  ],
  "serviceInit" : {
    "preStartSteps" : [
      { "commandName" : "CreateCdapHdfsDirCommand" },
      { "commandName" : "CreateCdapUserHdfsDirCommand" }
    ]
  },
  "commands" : [
    {
      "name" : "cdap_upgrade_tool",
      "label" : "Run CDAP Upgrade Tool",
      "description" : "Run CDAP Upgrade Tool",
      "roleCommand" : "master_upgrade_tool",
      "roleName" : "CDAP_MASTER",
      "runMode" : "single"
    },
    {
      "name" : "cdap_post_upgrade_tasks",
      "label" : "Run CDAP Post-Upgrade Tasks",
      "description" : "Run CDAP Post-Upgrade Tasks",
      "roleCommand" : "master_post_upgrade_tasks",
      "roleName" : "CDAP_MASTER",
      "runMode" : "single"
    }
  ],
  "gateway": {
    "alternatives": {
      "name": "cdap-conf",
      "linkRoot": "/etc/cdap",
      "priority": 60
    },
    "parameters": [],
    "configWriter": {
      "generators": [
        {
          "filename": "cdap-conf/cdap-site.xml",
          "configFormat": "hadoop_xml"
        }
      ],
      "peerConfigGenerators": [
        {
          "filename": "kafka.properties",
          "params": [ "kafka_bind_port" ],
          "roleName": "CDAP_KAFKA"
        }
      ]
    },
    "scriptRunner": {
      "program": "scripts/cdap-control.sh",
      "args": ["client"],
      "environmentVariables": {
        "EXPLORE_ENABLED": "${explore_enabled}",
        "KAFKA_PROPERTIES" : "kafka.properties",
        "KERBEROS_ENABLED": "${kerberos_auth_enabled}"
      }
    }
  },
  "kerberos": "${kerberos_auth_enabled}",
  "parameters": [
    {
      "name": "cdap_java_opts",
      "label": "Additional Java Options",
      "description": "Additional Java Options passed on the command line",
      "default": "-XX:+UseConcMarkSweepGC",
      "type": "string"
    },
    {
      "name": "app_temp_dir",
      "label": "App Temp Dir",
      "description": "Directory temp",
      "configName": "app.temp.dir",
      "required": true,
      "configurableInWizard": false,
      "default": "/tmp",
      "type": "string"
    },
    {
      "name": "app_artifact_dir",
      "label": "App Artifact Dir",
      "description": "Directory where all system artifacts and their corresponding config files are stored",
      "configName": "app.artifact.dir",
      "required": true,
      "configurableInWizard": true,
      "default": "/opt/cloudera/parcels/CDAP/master/artifacts",
      "type": "string"
    },
    {
      "name": "enable_unrecoverable_reset",
      "label": "Enable Unrecoverable Reset",
      "description": "WARNING! - Enabling this option enables the deletion of all applications and data;NO RECOVERY IS POSSIBLE!",
      "configName": "enable.unrecoverable.reset",
      "required": true,
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "explore_enabled",
      "label": "Explore Enabled",
      "description": "Specifies whether the CDAP Explore capability is enabled (requires Hive)",
      "configName": "explore.enabled",
      "required": true,
      "configurableInWizard": true,
      "default": true,
      "type": "boolean"
    },
    {
      "name": "explore_executor_container_instances",
      "label": "Explore Executor Container Instances",
      "description": "Number of explore executor instances",
      "configName": "explore.executor.container.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "explore_executor_max_instances",
      "label": "Explore Executor Max Instances",
      "description": "Maximum number of explore executor instances",
      "configName": "explore.executor.max.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "gateway_memory_mb",
      "label": "Gateway Memory MB",
      "description": "Memory in MB for Gateway process in YARN",
      "configName": "gateway.memory.mb",
      "required": true,
      "configurableInWizard": true,
      "default": 2048,
      "type": "long",
      "min": 1
    },
    {
      "name": "hdfs_namespace",
      "label": "HDFS Namespace",
      "description": "Specifies the hdfs namespace",
      "configName": "hdfs.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "/${root.namespace}",
      "type": "string"
    },
    {
      "name": "hdfs_user",
      "label": "HDFS User",
      "description": "Specifies the hdfs user",
      "configName": "hdfs.user",
      "required": true,
      "configurableInWizard": false,
      "default": "cdap",
      "type": "string"
    },
    {
      "name": "kerberos_auth_enabled",
      "label": "Kerberos Auth Enabled",
      "description": "Enables Kerberos Authentication",
      "configName": "kerberos.auth.enabled",
      "required": true,
      "configurableInWizard": true,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "log_saver_num_instances",
      "label": "Log Saver Num Instances",
      "description": "Number of log saver instances to run in yarn",
      "configName": "log.saver.num.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "log_saver_run_memory_megs",
      "label": "Log Saver Run Memory Megs",
      "description": "Memory in MB allocated to the Log Saver process",
      "configName": "log.saver.run.memory.megs",
      "required": true,
      "configurableInWizard": true,
      "default": 1024,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_data_table_retention_resolution_1_seconds",
      "label": "Metrics Data Table Retention Resolution 1 Seconds",
      "description": "Retention resolution 1 sec table in seconds",
      "configName": "metrics.data.table.retention.resolution.1.seconds",
      "required": true,
      "configurableInWizard": false,
      "default": 7200,
      "type": "long",
      "min": 1
    },
    {
      "name": "root_namespace",
      "label": "Root Namespace",
      "description": "Specifies the root namespace",
      "configName": "root.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "cdap",
      "type": "string"
    },
    {
      "name": "router_bind_port",
      "label": "Router Bind Port",
      "description": "Port number that the CDAP router should bind to for HTTP Connections",
      "configName": "router.bind.port",
      "required": true,
      "configurableInWizard": true,
      "default": 11015,
      "type": "port"
    },
    {
      "name": "router_ssl_bind_port",
      "label": "Router SSL Bind Port",
      "description": "Secure router listening port for gateway",
      "configName": "router.ssl.bind.port",
      "required": true,
      "configurableInWizard": false,
      "default": 10443,
      "type": "port"
    },
    {
      "name": "security_enabled",
      "label": "Security Enabled",
      "description": "Enables authentication for CDAP. When set to true all requests to CDAP must provide a valid access token",
      "configName": "security.enabled",
      "required": true,
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "ssl_enabled",
      "label": "SSL Enabled",
      "description": "True to enable SSL",
      "configName": "ssl.enabled",
      "required": true,
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "twill_java_reserved_memory_mb",
      "label": "Twill Java Reserved Memory Mb",
      "description": "Reserved non-heap memory in MB for Apache Twill container.",
      "configName": "twill.java.reserved.memory.mb",
      "required": true,
      "configurableInWizard": false,
      "default": 250,
      "type": "long"
    },
    {
      "name": "twill_jvm_gc_opts",
      "label": "Twill Jvm Gc Opts",
      "description": "Java GC options for all Apache Twill containers",
      "configName": "twill.jvm.gc.opts",
      "required": true,
      "configurableInWizard": false,
      "default": "-verbose:gc -Xloggc:<LOG_DIR>/gc.log -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M",
      "type": "string"
    },
    {
      "name": "twill_no_container_timeout",
      "label": "Twill No Container Timeout",
      "description": "Amount of time in milliseconds to wait for at least one container for Apache Twill runnable",
      "configName": "twill.no.container.timeout",
      "required": true,
      "configurableInWizard": false,
      "default": 120000,
      "type": "long"
    },
    {
      "name": "twill_zookeeper_namespace",
      "label": "Twill ZooKeeper Namespace",
      "description": "ZooKeeper namespace prefix for Apache Twill",
      "configName": "twill.zookeeper.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "/twill",
      "type": "string"
    },
    {
      "name": "zookeeper_session_timeout_millis",
      "label": "ZooKeeper Session Timeout Millis",
      "description": "Specifies the ZooKeeper session time out; time unit milliseconds",
      "configName": "zookeeper.session.timeout.millis",
      "required": true,
      "configurableInWizard": false,
      "default": 40000,
      "type": "long"
    }
  ],
  "roles": [
    {
      "name": "CDAP_ROUTER",
      "label": "CDAP Gateway/Router Service",
      "pluralLabel": "CDAP Gateway/Router Services",
      "parameters": [
        {
          "name" : "router_java_heapmax",
          "label" : "Router Max Heapsize",
          "description" : "Maximum size for the Java Process heap.  Passed to Java -Xmx.  Measured in bytes.",
          "required" : "true",
          "type" : "memory",
          "unit" : "bytes",
          "min" : 2147483648,
          "default" : 4294967296,
          "scaleFactor" : 1.3
        },
	{
	  "name": "router_ssl_keystore_keypassword",
	  "label": "Router SSL Keystore Key Password",
	  "description": "Keystore key password",
	  "configName": "router.ssl.keystore.keypassword",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "router_ssl_keystore_password",
	  "label": "Router SSL Keystore Password",
	  "description": "Keystore password",
	  "configName": "router.ssl.keystore.password",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "router_ssl_keystore_path",
	  "label": "Router SSL Keystore Path",
	  "description": "Keystore file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
	  "configName": "router.ssl.keystore.path",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "router_ssl_keystore_type",
	  "label": "Router SSL Keystore Type",
	  "description": "Keystore file type",
	  "configName": "router.ssl.keystore.type",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "JKS",
	  "type": "string"
	}
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "router_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "router.bind.address",
                "value": "{{HOSTNAME}}"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "kerberosPrincipals" : [
        {
          "name" : "cdap_principal",
          "primary" : "cdap",
          "instance" : "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "router.log",
        "isModifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {  
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {  
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {  
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {  
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {  
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "router" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES" : "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "OPTS": "${cdap_java_opts}",
          "ROUTER_JAVA_HEAPMAX": "-Xmx${router_java_heapmax}"
        }
      }
    },
    {
      "name": "CDAP_KAFKA",
      "label": "CDAP Kafka Service",
      "pluralLabel": "CDAP Kafka Services",
      "parameters": [
        {
          "name" : "kafka_java_heapmax",
          "label" : "Kafka Max Heapsize",
          "description" : "Maximum size for the Java Process heap.  Passed to Java -Xmx.  Measured in bytes.",
          "required" : "true",
          "type" : "memory",
          "unit" : "bytes",
          "min" : 1073741824,
          "default" : 2147483648,
          "scaleFactor" : 1.3
        },
	{
	  "name": "kafka_bind_address",
	  "label": "Kafka Bind Address",
	  "description": "Kafka server hostname to bind to",
	  "configName": "kafka.bind.address",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "0.0.0.0",
	  "type": "string"
	},
	{
	  "name": "kafka_bind_port",
	  "label": "Kafka Bind Port",
	  "description": "Kafka server port",
	  "configName": "kafka.bind.port",
	  "required": true,
	  "configurableInWizard": true,
	  "default": 9092,
	  "type": "port"
	},
	{
	  "name": "kafka_default_replication_factor",
	  "label": "Kafka Default Replication Factor",
	  "description": "Kafka replication factor",
	  "configName": "kafka.default.replication.factor",
	  "required": true,
	  "configurableInWizard": false,
	  "default": 1,
	  "type": "long",
	  "min": 1
	},
	{
	  "name": "kafka_zookeeper_namespace",
	  "label": "Kafka ZooKeeper Namespace",
	  "description": "ZooKeeper namespace for Kafka",
	  "configName": "kafka.zookeeper.namespace",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "kafka",
	  "type": "string"
	}
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "kafka_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "kafka.log",
        "isModifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "kafka-server" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES" : "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "OPTS": "${cdap_java_opts}",
          "KAFKA_JAVA_HEAPMAX": "-Xmx${kafka_java_heapmax}"
        }
      }
    },
    {
      "name": "CDAP_MASTER",
      "label": "CDAP Master Service",
      "pluralLabel": "CDAP Master Services",
      "parameters": [
        {
          "name": "master_collect_containers_log",
          "label": "Master Collect Container Logs",
          "description": "Determines if master service container logs are streamed back to the CDAP Master process log",
          "configName": "master.collect.containers.log",
          "required": true,
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "master_collect_app_containers_log_level",
          "label": "Master Collect Application Container Logs Level",
          "description": "The log level of application container logs that get streamed back to the CDAP Master process log. The levels supported are [ ALL, TRACE, DEBUG, INFO, WARN, ERROR, OFF ].",
          "configName": "master.collect.app.containers.log.level",
          "required": true,
          "configurableInWizard": false,
          "default": "ERROR",
          "type": "string_enum",
          "validValues": [
            "ALL",
            "TRACE",
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR",
            "OFF"
          ]
        },
        {
          "name" : "master_java_heapmax",
          "label" : "Master Max Heapsize",
          "description" : "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "required" : "true",
          "type" : "memory",
          "unit" : "bytes",
          "min" : 2147483648,
          "default" : 4294967296,
          "scaleFactor" : 1.3
        },
        {
          "name": "master_startup_checks_enabled",
          "label": "Master Startup Checks Enabled",
          "description": "Whether checks should be run before start up to determine if the master can be correctly run. Which checks are run are determined by the master.startup.checks.packages and master.startup.checks.classes settings. If any check fails, the CDAP master will fail to start instead of waiting for the problem to be fixed. This setting only affects distributed CDAP. It does not apply to CDAP standalone.",
          "configName": "master.startup.checks.enabled",
          "required": true,
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "master_startup_checks_packages",
          "label": "Master Startup Checks Packages",
          "description": "Comma separated list of packages containing checks that will be run before the master starts up. If any of the checks fails, the master will not start up. Checks will only be run if master.startup.checks.enabled is set to true.",
          "configName": "master.startup.checks.packages",
          "required": true,
          "configurableInWizard": false,
          "default": "co.cask.cdap.master.startup",
          "type": "string"
        },
        {
          "name": "master_startup_checks_classes",
          "label": "Master Startup Checks Classes",
          "description": "Comma separated list of classnames for checks that will be run before the master starts up. If any of the checks fails, the master will not start up. Checks will only be run if master.startup.checks.enabled is set to true.",
          "configName": "master.startup.checks.classes",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "master_startup_service_timeout_seconds",
          "label": "Master Startup Service Timeout Seconds",
          "description": "Timeout in seconds for master services to wait for their dependent services to be available. For example, the dataset executor master service requires the transaction service, and will wait for the transaction service to become available while it is starting up. If the timeout is hit, the service will fail to start and the master will shut itself down. If set to 0 or below, master services will not wait for their dependent services to start before starting themselves.",
          "configName": "master.startup.service.timeout.seconds",
          "required": true,
          "configurableInWizard": false,
          "default": 600,
          "type": "long",
          "unit": "seconds"
        },
        {
          "name": "metadata_service_bind_address",
          "label": "Metadata Service Bind Address",
          "description": "Default inet address for binding metadata HTTP service",
          "configName": "metadata.service.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "metadata_updates_kafka_broker_list",
          "label": "Metadata Updates Kafka Broker List",
          "description": "Kafka broker list to which metadata update notifications are published",
          "configName": "metadata.updates.kafka.broker.list",
          "required": true,
          "configurableInWizard": false,
          "default": "127.0.0.1:${kafka.bind.port}",
          "type": "string"
        },
        {
          "name": "metadata_updates_kafka_topic",
          "label": "Metadata Updates Kafka Topic",
          "description": "Kafka topic to which metadata update notifications are published",
          "configName": "metadata.updates.kafka.topic",
          "required": true,
          "configurableInWizard": false,
          "default": "cdap-metadata-updates",
          "type": "string"
        },
        {
          "name": "metadata_updates_publish_enabled",
          "label": "Metadata Updates Publish Enabled",
          "description": "Determines if metadata updates will be published to Apache Kafka. External systems can subscribe to the Kafka topic determined by ${metadata.updates.kafka.topic} to receive notifications of metadata updates.",
          "configName": "metadata.updates.publish.enabled",
          "required": true,
          "configurableInWizard": false,
          "default": false,
          "type": "boolean"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "master_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "app.bind.address",
                "value": "{{HOSTNAME}}"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              },
              {
                "key": "dataset.service.bind.address",
                "value": "{{HOSTNAME}}"
              },
              {
                "key": "app.adapter.dir",
                "value": "{{COMPONENT_HOME}}/plugins"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ],
        "auxConfigGenerators": [
          {
            "filename": "logback-container.xml",
            "sourceFilename": "aux/logback-container.xml"
          }
        ]
      },
      "kerberosPrincipals" : [
        {
          "name" : "cdap_principal",
          "primary" : "cdap",
          "instance" : "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "master.log",
        "isModifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "commands" : [
        {
          "name" : "master_upgrade_tool",
          "label" : "Run CDAP Upgrade Tool",
          "description" : "Run CDAP Upgrade Tool",
          "expectedExitCodes" : [0],
          "requiredRoleState" : "stopped",
          "commandRunner" : {
            "program" : "scripts/cdap-control.sh",
            "args" : ["upgrade"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES" : "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}"
            }
          }
        },
        {
          "name" : "master_post_upgrade_tasks",
          "label" : "Run CDAP Post-Upgrade Tasks",
          "description" : "Run CDAP Post-Upgrade Tasks",
          "expectedExitCodes" : [0],
          "requiredRoleState" : "running",
          "commandRunner" : {
            "program" : "scripts/cdap-control.sh",
            "args" : ["postupgrade"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES" : "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}"
            }
          }
        }
      ],
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "master" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES" : "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "OPTS": "${cdap_java_opts}",
          "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}",
          "STARTUP_CHECKS_ENABLED": "${master_startup_checks_enabled}"
        }
      }
    },
    {
      "name": "CDAP_UI",
      "label": "CDAP UI Service",
      "pluralLabel": "CDAP UI Services",
      "externalLink": {
        "name": "cdap_ui",
        "label": "CDAP UI",
        "url": "http://${host}:${dashboard_bind_port}"
      },
      "parameters": [
	{
	  "name": "dashboard_bind_address",
	  "label": "Dashboard Bind Address",
	  "description": "Dashboard Bind Address",
	  "configName": "dashboard.bind.address",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "0.0.0.0",
	  "type": "string"
	},
	{
	  "name": "dashboard_bind_port",
	  "label": "Dashboard Bind Port",
	  "description": "Specifies the CDAP Dashboard Bind Port",
	  "configName": "dashboard.bind.port",
	  "required": true,
	  "configurableInWizard": true,
	  "default": 9999,
	  "type": "port"
	},
        {
          "name": "dashboard_router_check_timeout_secs",
          "label": "Dashboard Router Check Timeout Seconds",
          "description": "Amount of time, in seconds, CDAP UI waits before exiting when not able to connect to CDAP Router on startup. Use timeout as 0 to wait indefinitely.",
          "configName": "dashboard.router.check.timeout.secs",
          "required": true,
          "configurableInWizard": false,
          "default": 60,
          "type": "long",
          "unit": "seconds"
        },
	{
	  "name": "dashboard_ssl_bind_port",
	  "label": "Dashboard SSL Bind Port",
	  "description": "Dashboard SSL Bind Port",
	  "configName": "dashboard.ssl.bind.port",
	  "required": true,
	  "configurableInWizard": false,
	  "default": 9443,
	  "type": "port"
	},
	{
	  "name": "dashboard_ssl_cert",
	  "label": "Dashboard SSL Cert",
	  "description": "SSL cert file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
	  "configName": "dashboard.ssl.cert",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "dashboard_ssl_disable_cert_check",
	  "label": "Dashboard SSL Disable Cert Check",
	  "description": "Dashboard SSL Disable Cert Check",
	  "configName": "dashboard.ssl.disable.cert.check",
	  "required": true,
	  "configurableInWizard": false,
	  "default": false,
	  "type": "boolean"
	},
	{
	  "name": "dashboard_ssl_key",
	  "label": "Dashboard SSL Key",
	  "description": "SSL key file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
	  "configName": "dashboard.ssl.key",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "router_server_port",
	  "label": "Router Server Port",
	  "description": "Router port to which Console connects",
	  "configName": "router.server.port",
	  "required": true,
	  "configurableInWizard": true,
	  "default": 11015,
	  "type": "port"
	}
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "router.server.address",
                "value": "{{HOSTNAME}}"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "ui" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES" : "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}"
        }
      }
    },
    {
      "name": "CDAP_AUTH_SERVER",
      "label": "CDAP Security Auth Service",
      "pluralLabel": "CDAP Security Auth Services",
      "topology": {
        "minInstances": "0"
      },
      "parameters": [
        {
          "name" : "auth_java_heapmax",
          "label" : "Auth Server Max Heapsize",
          "description" : "Maximum size for the Java Process heap.  Passed to Java -Xmx.  Measured in bytes.",
          "required" : "true",
          "type" : "memory",
          "unit" : "bytes",
          "min" : 1073741824,
          "default" : 2147483648,
          "scaleFactor" : 1.3
        },
	{
	  "name": "security_auth_server_bind_port",
	  "label": "Security Auth Server Bind Port",
	  "description": "Port number that the CDAP Authentication Server should bind to for HTTP",
	  "configName": "security.auth.server.bind.port",
	  "required": true,
	  "configurableInWizard": false,
	  "default": 10009,
	  "type": "port"
	},
	{
	  "name": "security_auth_server_ssl_bind_port",
	  "label": "Security Auth Server SSL Bind Port",
	  "description": "Port to bind to for HTTPS on the CDAP Authentication Server",
	  "configName": "security.auth.server.ssl.bind.port",
	  "required": true,
	  "configurableInWizard": false,
	  "default": 10010,
	  "type": "port"
	},
	{
	  "name": "security_auth_server_ssl_keystore_keypassword",
	  "label": "Security Auth Server SSL Keystore Key Password",
	  "description": "Keystore key password",
	  "configName": "security.auth.server.ssl.keystore.keypassword",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "security_auth_server_ssl_keystore_password",
	  "label": "Security Auth Server SSL Keystore Password",
	  "description": "Keystore password",
	  "configName": "security.auth.server.ssl.keystore.password",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "security_auth_server_ssl_keystore_path",
	  "label": "Security Auth Server SSL Keystore Path",
	  "description": "Keystore file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
	  "configName": "security.auth.server.ssl.keystore.path",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "security_auth_server_ssl_keystore_type",
	  "label": "Security Auth Server SSL Keystore Type",
	  "description": "Keystore file type",
	  "configName": "security.auth.server.ssl.keystore.type",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "JKS",
	  "type": "string"
	},
	{
	  "name": "security_authentication_basic_realmfile",
	  "label": "Security Authentication Basic Realm File",
	  "description": "Username / password file to use when basic authentication is configured",
	  "configName": "security.authentication.basic.realmfile",
	  "required": false,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "path",
	  "pathType": "localDataFile"
	},
	{
	  "name": "security_authentication_handler_debug",
	  "label": "Security Authentication Handler Debug",
	  "description": "Set to true to enable debugging",
	  "configName": "security.authentication.handler.debug",
	  "required": true,
	  "configurableInWizard": false,
	  "default": true,
	  "type": "boolean"
	},
	{
	  "name": "security_authentication_handler_hostname",
	  "label": "Security Authentication Handler Hostname",
	  "description": "LDAP server host",
	  "configName": "security.authentication.handler.hostname",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "security_authentication_handler_port",
	  "label": "Security Authentication Handler Port",
	  "description": "LDAP server port",
	  "configName": "security.authentication.handler.port",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "389",
	  "type": "port"
	},
	{
	  "name": "security_authentication_handler_userBaseDn",
	  "label": "Security Authentication Handler userBaseDn",
	  "description": "Distinguished Name of the root for user account entries in the LDAP directory",
	  "configName": "security.authentication.handler.userBaseDn",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "security_authentication_handler_userObjectClass",
	  "label": "Security Authentication Handler userObjectClass",
	  "description": "LDAP Object class used to store user entries",
	  "configName": "security.authentication.handler.userObjectClass",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "security_authentication_handler_userRdnAttribute",
	  "label": "Security Authentication Handler userRdnAttribute",
	  "description": "LDAP Object attribute for username when search by role DN",
	  "configName": "security.authentication.handler.userRdnAttribute",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	},
	{
	  "name": "security_authentication_handlerClassName",
	  "label": "Security Authentication Handler Class Name",
	  "description": "Name of the authentication implementation to use to validate user credentials",
	  "configName": "security.authentication.handlerClassName",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "co.cask.cdap.security.server.BasicAuthenticationHandler",
	  "type": "string_enum",
	  "validValues": [
	    "co.cask.cdap.security.server.BasicAuthenticationHandler",
	    "co.cask.cdap.security.server.LDAPAuthenticationHandler",
	    "co.cask.cdap.security.server.JASPIAuthenticationHandler"
	  ]
	},
	{
	  "name": "security_authentication_loginmodule_className",
	  "label": "Security Authentication Login Module Class Name",
	  "description": "JAAS LoginModule implementation to use when co.cask.security.server.JAASAuthenticationHandler is configured for security.authentication.handlerClassName",
	  "configName": "security.authentication.loginmodule.className",
	  "required": true,
	  "configurableInWizard": false,
	  "default": "",
	  "type": "string"
	}
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "auth_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "security.auth.server.address",
                "value": "{{HOSTNAME}}"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "kerberosPrincipals" : [
        {
          "name" : "cdap_principal",
          "primary" : "cdap",
          "instance" : "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "auth-server.log",
        "isModifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "auth-server" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES" : "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "OPTS": "${cdap_java_opts}",
          "AUTH_JAVA_HEAPMAX": "-Xmx${auth_java_heapmax}"
        }
      }
    }
  ]
}
