{
  "name": "CDAP",
  "label": "CDAP",
  "description": "The Cask Data Application Platform (CDAP) is an easy-to-use, open source and enterprise-ready integrated platform for organizations to build, deploy, and operate data-driven applications.",
  "version": "3.4.2",
  "runAs": {
    "user": "cdap",
    "group": "cdap"
  },
  "maxInstances": 1,
  "compatibility": {
    "generation": 1,
    "cdhVersion": {
      "min": "5",
      "max": 5
    }
  },
  "parcel": {
    "repoUrl": "http://repository.cask.co/parcels/cdap/3.4/",
    "requiredTags": [ "cdh", "cdap" ]
  },
  "icon": "images/icon.png",
  "serviceDependencies": [
    {"name": "ZOOKEEPER", "required": "true" },
    {"name": "HDFS", "required": "true"},
    {"name": "YARN", "required": "true"},
    {"name": "HBASE", "required": "true"},
    {"name": "HIVE", "required": "false"},
    {"name": "SPARK_ON_YARN", "required": "false"}
  ],
  "rolesWithExternalLinks": [
    "CDAP_UI"
  ],
  "hdfsDirs": [
    {
      "name": "CreateCdapHdfsDirCommand",
      "label": "Create CDAP Namespace Dir",
      "description": "Creates the top-level CDAP namespace directory in HDFS",
      "directoryDescription": "CDAP HDFS namespace directory",
      "path": "/${root_namespace}",
      "permissions": "0755"
    },
    {
      "name": "CreateCdapUserHdfsDirCommand",
      "label": "Create CDAP User Dir",
      "description": "Creates the /user/cdap HDFS directory needed for mapreduce",
      "directoryDescription": "CDAP HDFS user directory",
      "path": "/user/${hdfs_user}",
      "permissions": "0755"
    }
  ],
  "serviceInit": {
    "preStartSteps": [
      { "commandName": "CreateCdapHdfsDirCommand" },
      { "commandName": "CreateCdapUserHdfsDirCommand" }
    ]
  },
  "commands": [
    {
      "name": "cdap_upgrade_tool",
      "label": "Run CDAP Upgrade",
      "description": "Run after upgrading the CDAP Parcel, and before starting CDAP",
      "roleCommand": "master_upgrade_tool",
      "roleName": "CDAP_MASTER",
      "runMode": "single"
    },
    {
      "name": "cdap_upgrade_hbase_tool",
      "label": "Run Post-CDH Upgrade Tasks",
      "description": "Run after upgrading CDH, after disabling CDAP HBase Tables, and before starting CDAP",
      "roleCommand": "master_upgrade_hbase_tool",
      "roleName": "CDAP_MASTER",
      "runMode": "single"
    },
    {
      "name": "cdap_post_upgrade_tasks",
      "label": "Run Post-CDAP Upgrade Tasks",
      "description": "Run after upgrading CDAP, and after starting CDAP the first time",
      "roleCommand": "master_post_upgrade_tasks",
      "roleName": "CDAP_MASTER",
      "runMode": "single"
    }
  ],
  "gateway": {
    "alternatives": {
      "name": "cdap-conf",
      "linkRoot": "/etc/cdap",
      "priority": 60
    },
    "parameters": [],
    "configWriter": {
      "generators": [
        {
          "filename": "cdap-conf/cdap-site.xml",
          "configFormat": "hadoop_xml"
        }
      ],
      "peerConfigGenerators": [
        {
          "filename": "kafka.properties",
          "params": [ "kafka_bind_port" ],
          "roleName": "CDAP_KAFKA"
        }
      ]
    },
    "scriptRunner": {
      "program": "scripts/cdap-control.sh",
      "args": ["client"],
      "environmentVariables": {
        "EXPLORE_ENABLED": "${explore_enabled}",
        "KAFKA_PROPERTIES": "kafka.properties",
        "KERBEROS_ENABLED": "${kerberos_auth_enabled}"
      }
    }
  },
  "kerberos": "${kerberos_auth_enabled}",
  "parameters": [
    {
      "name": "apps_scheduler_queue",
      "label": "Apps Scheduler Queue",
      "description": "Scheduler queue for CDAP programs and Explore Queries",
      "configName": "apps.scheduler.queue",
      "required": false,
      "configurableInWizard": false,
      "type": "string"
    },
    {
      "name": "app_temp_dir",
      "label": "App Temp Dir",
      "description": "Temp directory",
      "configName": "app.temp.dir",
      "required": true,
      "configurableInWizard": false,
      "default": "/tmp",
      "type": "string"
    },
    {
      "name": "app_artifact_dir",
      "label": "App Artifact Dir",
      "description": "Semicolon-separated list of local directories scanned for system artifacts to add to the artifact repository",
      "configName": "app.artifact.dir",
      "required": true,
      "configurableInWizard": true,
      "type": "string_array",
      "default": [
        "${cdap.home}/master/artifacts"
      ],
      "separator": ";"
    },
    {
      "name": "app_program_runtime_extensions_dir",
      "label": "App Program Runtime Extensions Dir",
      "description": "Semicolon-separated list of local directories that are scanned for program runtime extensions",
      "configName": "app.program.runtime.extensions.dir",
      "required": true,
      "configurableInWizard": true,
      "type": "string_array",
      "default": [
        "${cdap.home}/master/ext/runtimes"
      ],
      "separator": ";"
    },
    {
      "name": "audit_enabled",
      "label": "Audit Enabled",
      "description": "Determines whether to publish audit messages to Apache Kafka",
      "configName": "audit.enabled",
      "required": true,
      "configurableInWizard": false,
      "default": true,
      "type": "boolean"
    },
    {
      "name": "audit_kafka_topic",
      "label": "Audit Kafka Topic",
      "description": "Apache Kafka topic name to which audit messages are published",
      "configName": "audit.kafka.topic",
      "required": true,
      "configurableInWizard": false,
      "default": "audit",
      "type": "string"
    },
    {
      "name": "cdap_java_opts",
      "label": "Additional Java Options",
      "description": "Additional Java Options passed on the command line",
      "default": "-XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m",
      "type": "string"
    },
    {
      "name": "data_tx_max_instances",
      "label": "Transaction Client Max Instances",
      "description": "Maximum number of transaction client instances",
      "configName": "data.tx.max.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "data_tx_memory_mb",
      "label": "Transaction Client Container Memory MB",
      "description": "Memory in megabytes of the transaction clients",
      "configName": "data.tx.memory.mb",
      "required": true,
      "configurableInWizard": true,
      "default": 512,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "data_tx_num_cores",
      "label": "Transaction Client Container Number of Virtual Cores",
      "description": "Number of virtual cores for each transaction client instance",
      "configName": "data.tx.num.cores",
      "required": true,
      "configurableInWizard": true,
      "default": 2,
      "type": "long",
      "min": 1
    },
    {
      "name": "data_tx_num_instances",
      "label": "Transaction Client Number of Instances",
      "description": "Number of transaction client instances",
      "configName": "data.tx.num.instances",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "data_tx_timeout",
      "label": "Transaction Client Timeout",
      "description": "Timeout value in seconds for a transaction; if the transaction is not finished in that time, it is marked invalid",
      "configName": "data.tx.timeout",
      "required": true,
      "configurableInWizard": false,
      "default": 30,
      "type": "long"
    },
    {
      "name": "dataset_executor_container_instances",
      "label": "Dataset Executor Container Instances",
      "description": "Number of dataset executor instances",
      "configName": "dataset.executor.container.instances",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "dataset_executor_container_memory_mb",
      "label": "Dataset Executor Container Memory MB",
      "description": "Size of memory in megabytes for each dataset executor instance",
      "configName": "dataset.executor.container.memory.mb",
      "required": true,
      "configurableInWizard": true,
      "default": 512,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "dataset_executor_container_num_cores",
      "label": "Dataset Executor Container Number of Virtual Cores",
      "description": "Number of virtual cores for each dataset executor instance",
      "configName": "dataset.executor.container.num.cores",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "dataset_executor_max_instances",
      "label": "Dataset Executor Max Instances",
      "description": "Maximum number of dataset executor instances",
      "configName": "dataset.executor.max.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "enable_unrecoverable_reset",
      "label": "Enable Unrecoverable Reset",
      "description": "Determines if resetting CDAP should be enabled. **WARNING: Enabling this option makes it possible to delete all applications and data; NO RECOVERY IS POSSIBLE!**",
      "configName": "enable.unrecoverable.reset",
      "required": true,
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "explore_enabled",
      "label": "Explore Enabled",
      "description": "Determines if the CDAP Explore Service (ad-hoc SQL queries) is enabled",
      "configName": "explore.enabled",
      "required": true,
      "configurableInWizard": true,
      "default": true,
      "type": "boolean"
    },
    {
      "name": "explore_executor_container_instances",
      "label": "Explore Executor Container Instances",
      "description": "Number of explore executor instances",
      "configName": "explore.executor.container.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 1,
      "type": "long",
      "max": 1
    },
    {
      "name": "explore_executor_container_memory_mb",
      "label": "Explore Executor Container Memory MB",
      "description": "Size of memory in megabytes for each explore executor instance",
      "configName": "explore.executor.container.memory.mb",
      "required": true,
      "configurableInWizard": true,
      "default": 2048,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "explore_executor_container_num_cores",
      "label": "Explore Executor Container Number of Virtual Cores",
      "description": "Number of virtual cores for each explore executor",
      "configName": "explore.executor.container.num.cores",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "hdfs_namespace",
      "label": "HDFS Namespace",
      "description": "Root directory for HDFS files written by CDAP",
      "configName": "hdfs.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "/${root.namespace}",
      "type": "string"
    },
    {
      "name": "hdfs_user",
      "label": "HDFS User",
      "description": "User name for accessing HDFS",
      "configName": "hdfs.user",
      "required": true,
      "configurableInWizard": false,
      "default": "cdap",
      "type": "string"
    },
    {
      "name": "kerberos_auth_enabled",
      "label": "Kerberos Auth Enabled",
      "description": "Determines if Kerberos authentication is enabled",
      "configName": "kerberos.auth.enabled",
      "required": true,
      "configurableInWizard": true,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "log_saver_max_instances",
      "label": "Log Saver Max Instances",
      "description": "Maximum number of log saver instances to run in YARN",
      "configName": "log.saver.max.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "log_saver_num_instances",
      "label": "Log Saver Num Instances",
      "description": "Number of log saver instances to run in YARN",
      "configName": "log.saver.num.instances",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "log_saver_run_memory_megs",
      "label": "Log Saver Run Memory Megs",
      "description": "Memory in megabytes allocated for log saver instances to run in YARN",
      "configName": "log.saver.run.memory.megs",
      "required": true,
      "configurableInWizard": true,
      "default": 1024,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "log_saver_run_num_cores",
      "label": "Log Saver Run Number of Virtual Cores",
      "description": "Number of cores for each log saver instance in YARN",
      "configName": "log.saver.run.num.cores",
      "required": true,
      "configurableInWizard": true,
      "default": 2,
      "type": "long",
      "min": 1
    },
    {
      "name": "master_services_scheduler_queue",
      "label": "Master Services Scheduler Queue",
      "description": "Scheduler queue for CDAP master services",
      "configName": "master.services.scheduler.queue",
      "required": false,
      "configurableInWizard": false,
      "type": "string"
    },
    {
      "name": "metrics_data_table_retention_resolution_1_seconds",
      "label": "Metrics Data Table Retention Resolution 1 Seconds",
      "description": "Retention resolution of the 1-second resolution table in seconds; default retention period is 2 hours",
      "configName": "metrics.data.table.retention.resolution.1.seconds",
      "required": true,
      "configurableInWizard": false,
      "default": 7200,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_max_instances",
      "label": "Metrics Container Max Instances",
      "description": "Maximum number of instances for the metrics service",
      "configName": "metrics.max.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_memory_mb",
      "label": "Metrics Container Memory MB",
      "description": "Memory assigned to the metrics service in megabytes",
      "configName": "metrics.memory.mb",
      "required": true,
      "configurableInWizard": true,
      "default": 512,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "metrics_num_cores",
      "label": "Metrics Container Number of Virtual Cores",
      "description": "Number of virtual cores for the metrics service",
      "configName": "metrics.num.cores",
      "required": true,
      "configurableInWizard": true,
      "default": 2,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_num_instances",
      "label": "Metrics Container Instances",
      "description": "Number of instances for the metrics service",
      "configName": "metrics.num.instances",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_processor_max_instances",
      "label": "Metrics Processor Container Max Instances",
      "description": "Maximum number of instances for metrics processor service Apache Twill runnable",
      "configName": "metrics.processor.max.instances",
      "required": true,
      "configurableInWizard": false,
      "default": 5,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_processor_memory_mb",
      "label": "Metrics Processor Container Memory MB",
      "description": "Size of memory in megabytes for metrics processor service Apache Twill runnable",
      "configName": "metrics.processor.memory.mb",
      "required": true,
      "configurableInWizard": true,
      "default": 512,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "metrics_processor_num_cores",
      "label": "Metrics Processor Container Number of Virtual Cores",
      "description": "Number of cores for metrics processor service Apache Twill runnable",
      "configName": "metrics.processor.num.cores",
      "required": true,
      "configurableInWizard": 1,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "metrics_processor_num_instances",
      "label": "Metrics Processor Container Instances",
      "description": "Number of instances for metrics processor service Apache Twill runnable",
      "configName": "metrics.processor.num.instances",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "root_namespace",
      "label": "Root Namespace",
      "description": "Root for this CDAP instance; used as the parent (or root) node for ZooKeeper, as the directory under which all CDAP data and metadata is stored in HDFS, and as the prefix for all HBase tables created by CDAP; must be composed of alphanumeric characters",
      "configName": "root.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "cdap",
      "type": "string"
    },
    {
      "name": "router_bind_address",
      "label": "Router Bind Address",
      "description": "CDAP Router service bind address",
      "configName": "router.bind.address",
      "required": true,
      "configurableInWizard": true,
      "default": "0.0.0.0",
      "type": "string"
    },
    {
      "name": "router_bind_port",
      "label": "Router Bind Port",
      "description": "CDAP Router service bind port",
      "configName": "router.bind.port",
      "required": true,
      "configurableInWizard": true,
      "default": 11015,
      "type": "port"
    },
    {
      "name": "router_server_address",
      "label": "Router Server Address",
      "description": "CDAP Router service address to which CDAP UI connects",
      "configName": "router.server.address",
      "required": true,
      "configurableInWizard": true,
      "default": "127.0.0.1",
      "type": "string"
    },
    {
      "name": "router_server_port",
      "label": "Router Server Port",
      "description": "CDAP Router service port to which CDAP UI connects",
      "configName": "router.server.port",
      "required": true,
      "configurableInWizard": true,
      "default": 11015,
      "type": "port"
    },
    {
      "name": "router_ssl_bind_port",
      "label": "Router SSL Bind Port",
      "description": "CDAP Router service bind port for HTTPS",
      "configName": "router.ssl.bind.port",
      "required": true,
      "configurableInWizard": false,
      "default": 10443,
      "type": "port"
    },
    {
      "name": "security_enabled",
      "label": "Security Enabled",
      "description": "Determines if authentication is enabled for CDAP; if true, all requests to CDAP must provide a valid access token",
      "configName": "security.enabled",
      "required": true,
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "ssl_enabled",
      "label": "SSL Enabled",
      "description": "Determines if SSL is enabled",
      "configName": "ssl.enabled",
      "required": true,
      "configurableInWizard": false,
      "default": false,
      "type": "boolean"
    },
    {
      "name": "stream_container_instances",
      "label": "Stream Container Instances",
      "description": "Number of YARN container instances for the stream handler; in standalone mode, it's always one",
      "configName": "stream.container.instances",
      "required": true,
      "configurableInWizard": true,
      "default": 1,
      "type": "long",
      "min": 1
    },
    {
      "name": "stream_container_memory_mb",
      "label": "Stream Container Memory MB",
      "description": "Amount of memory in megabytes for the YARN container that runs the stream handler",
      "configName": "stream.container.memory.mb",
      "required": true,
      "configurableInWizard": true,
      "default": 512,
      "type": "memory",
      "unit": "megabytes",
      "min": 512
    },
    {
      "name": "stream_container_num_cores",
      "label": "Stream Container Number of Virtual Cores",
      "description": "Number of virtual core for the YARN container that runs the stream handler",
      "configName": "stream.container.num.cores",
      "required": true,
      "configurableInWizard": true,
      "default": 2,
      "type": "long",
      "min": 1
    },
    {
      "name": "twill_java_reserved_memory_mb",
      "label": "Twill Java Reserved Memory Mb",
      "description": "Reserved non-heap memory in megabytes for Apache Twill container",
      "configName": "twill.java.reserved.memory.mb",
      "required": true,
      "configurableInWizard": false,
      "default": 250,
      "type": "long"
    },
    {
      "name": "twill_jvm_gc_opts",
      "label": "Twill Jvm Gc Opts",
      "description": "Java garbage collection options for all Apache Twill containers; <LOG_DIR> is the location of the log directory in the container",
      "configName": "twill.jvm.gc.opts",
      "required": true,
      "configurableInWizard": false,
      "default": "-verbose:gc -Xloggc:<LOG_DIR>/gc.log -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M",
      "type": "string"
    },
    {
      "name": "twill_no_container_timeout",
      "label": "Twill No Container Timeout",
      "description": "Amount of time in milliseconds to wait for at least one container for Apache Twill runnable",
      "configName": "twill.no.container.timeout",
      "required": true,
      "configurableInWizard": false,
      "default": 120000,
      "type": "long"
    },
    {
      "name": "twill_zookeeper_namespace",
      "label": "Twill ZooKeeper Namespace",
      "description": "ZooKeeper namespace prefix for Apache Twill",
      "configName": "twill.zookeeper.namespace",
      "required": true,
      "configurableInWizard": false,
      "default": "/twill",
      "type": "string"
    },
    {
      "name": "zookeeper_session_timeout_millis",
      "label": "ZooKeeper Session Timeout Millis",
      "description": "ZooKeeper session timeout in milliseconds",
      "configName": "zookeeper.session.timeout.millis",
      "required": true,
      "configurableInWizard": false,
      "default": 40000,
      "type": "long"
    }
  ],
  "roles": [
    {
      "name": "CDAP_ROUTER",
      "label": "CDAP Gateway/Router Service",
      "pluralLabel": "CDAP Gateway/Router Services",
      "parameters": [
        {
          "name": "router_java_heapmax",
          "label": "Router Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "required": "true",
          "type": "memory",
          "unit": "bytes",
          "min": 2147483648,
          "default": 4294967296,
          "scaleFactor": 1.3
        },
        {
          "name": "router_ssl_keystore_keypassword",
          "label": "Router SSL Keystore Key Password",
          "description": "Keystore key password",
          "configName": "router.ssl.keystore.keypassword",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "router_ssl_keystore_password",
          "label": "Router SSL Keystore Password",
          "description": "Keystore password",
          "configName": "router.ssl.keystore.password",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "router_ssl_keystore_path",
          "label": "Router SSL Keystore Path",
          "description": "Keystore file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
          "configName": "router.ssl.keystore.path",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "router_ssl_keystore_type",
          "label": "Router SSL Keystore Type",
          "description": "Keystore file type",
          "configName": "router.ssl.keystore.type",
          "required": false,
          "configurableInWizard": false,
          "default": "JKS",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "router_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "kerberosPrincipals": [
        {
          "name": "cdap_principal",
          "primary": "cdap",
          "instance": "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "router.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {  
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {  
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {  
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {  
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {  
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "router" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "ROUTER_JAVA_HEAPMAX": "-Xmx${router_java_heapmax}"
        }
      }
    },
    {
      "name": "CDAP_KAFKA",
      "label": "CDAP Kafka Service",
      "pluralLabel": "CDAP Kafka Services",
      "parameters": [
        {
          "name": "kafka_java_heapmax",
          "label": "Kafka Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "required": "true",
          "type": "memory",
          "unit": "bytes",
          "min": 1073741824,
          "default": 2147483648,
          "scaleFactor": 1.3
        },
        {
          "name": "kafka_bind_address",
          "label": "Kafka Bind Address",
          "description": "CDAP Kafka service bind address",
          "configName": "kafka.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "kafka_bind_port",
          "label": "Kafka Bind Port",
          "description": "CDAP Kafka service bind port",
          "configName": "kafka.bind.port",
          "required": true,
          "configurableInWizard": true,
          "default": 9092,
          "type": "port"
        },
        {
          "name": "kafka_default_replication_factor",
          "label": "Kafka Default Replication Factor",
          "description": "CDAP Kafka service replication factor; used to replicate Kafka messages across multiple machines to prevent data loss in the event of a hardware failure. The recommended setting is to run at least two CDAP Kafka servers. If you are running two CDAP Kafka servers, set this value to 2; otherwise, set it to the number of CDAP Kafka servers.",
          "configName": "kafka.default.replication.factor",
          "required": true,
          "configurableInWizard": false,
          "default": 1,
          "type": "long",
          "min": 1
        },
        {
          "name": "kafka_zookeeper_namespace",
          "label": "Kafka ZooKeeper Namespace",
          "description": "CDAP Kafka service ZooKeeper namespace",
          "configName": "kafka.zookeeper.namespace",
          "required": true,
          "configurableInWizard": false,
          "default": "kafka",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "kafka_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "kafka.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "kafka-server" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "KAFKA_JAVA_HEAPMAX": "-Xmx${kafka_java_heapmax}"
        }
      }
    },
    {
      "name": "CDAP_MASTER",
      "label": "CDAP Master Service",
      "pluralLabel": "CDAP Master Services",
      "parameters": [
        {
          "name": "app_program_spark_yarn_client_rewrite_enabled",
          "label": "App Program Spark Yarn Client Rewrite Enabled",
          "description": "Specify whether to rewrite the yarn.Client class in Spark to work around the issue SPARK-13441 in CDM clusters.",
          "configName": "app.program.spark.yarn.client.rewrite.enabled",
          "required": true,
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "log_kafka_topic",
          "label": "Log Kafka Topic",
          "description": "Kafka topic name used to publish logs",
          "configName": "log.kafka.topic",
          "required": true,
          "configurableInWizard": false,
          "default": "logs.user-v2",
          "type": "string"
        },
        {
          "name": "master_collect_containers_log",
          "label": "Master Collect Container Logs",
          "description": "Determines if master service container logs are streamed back to the CDAP Master process log",
          "configName": "master.collect.containers.log",
          "required": true,
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "master_collect_app_containers_log_level",
          "label": "Master Collect Application Container Logs Level",
          "description": "The log level of application container logs that are streamed back to the CDAP Master process log. The levels supported are [ ALL, TRACE, DEBUG, INFO, WARN, ERROR, OFF ].",
          "configName": "master.collect.app.containers.log.level",
          "required": true,
          "configurableInWizard": false,
          "default": "ERROR",
          "type": "string_enum",
          "validValues": [
            "ALL",
            "TRACE",
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR",
            "OFF"
          ]
        },
        {
          "name": "master_java_heapmax",
          "label": "Master Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "required": "true",
          "type": "memory",
          "unit": "bytes",
          "min": 2147483648,
          "default": 4294967296,
          "scaleFactor": 1.3
        },
        {
          "name": "master_startup_checks_enabled",
          "label": "Master Startup Checks Enabled",
          "description": "Whether checks should be run before startup to determine if the CDAP Master can be run correctly. Which checks are run is determined by the master.startup.checks.packages and master.startup.checks.classes settings. If any checks fail, the CDAP Master will fail to start instead of waiting for the problem to be fixed. This setting only affects Distributed CDAP. It does not apply to Standalone CDAP.",
          "configName": "master.startup.checks.enabled",
          "required": true,
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "master_startup_checks_packages",
          "label": "Master Startup Checks Packages",
          "description": "Comma-separated list of packages containing checks that will be run before the CDAP Master starts up. If any of the checks fails, the CDAP Master will not start up. Checks will only be run if master.startup.checks.enabled is set to true.",
          "configName": "master.startup.checks.packages",
          "required": true,
          "configurableInWizard": false,
          "default": "co.cask.cdap.master.startup",
          "type": "string"
        },
        {
          "name": "master_startup_checks_classes",
          "label": "Master Startup Checks Classes",
          "description": "Comma-separated list of classnames for checks that will be run before the CDAP Master starts up. If any of the checks fails, the CDAP Master will not start up. Checks will only be run if master.startup.checks.enabled is set to true.",
          "configName": "master.startup.checks.classes",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "master_startup_service_timeout_seconds",
          "label": "Master Startup Service Timeout Seconds",
          "description": "Timeout in seconds for master services to wait for their dependent services to be available. For example, the dataset executor master service requires the transaction service, and will wait for the transaction service to become available while it is starting up. If the timeout is hit, the service will fail to start and the master service will shut itself down. If set to 0 or below, master services will not wait for their dependent services to start before starting themselves.",
          "configName": "master.startup.service.timeout.seconds",
          "required": true,
          "configurableInWizard": false,
          "default": 600,
          "type": "long",
          "unit": "seconds"
        },
        {
          "name": "metadata_service_bind_address",
          "label": "Metadata Service Bind Address",
          "description": "Metadata HTTP service bind address",
          "configName": "metadata.service.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "metadata_updates_kafka_broker_list",
          "label": "Metadata Updates Kafka Broker List",
          "description": "Apache Kafka broker list to which metadata update notifications are published",
          "configName": "metadata.updates.kafka.broker.list",
          "required": true,
          "configurableInWizard": false,
          "default": "127.0.0.1:${kafka.bind.port}",
          "type": "string"
        },
        {
          "name": "metadata_updates_kafka_topic",
          "label": "Metadata Updates Kafka Topic",
          "description": "Apache Kafka topic name to which metadata update notifications are published",
          "configName": "metadata.updates.kafka.topic",
          "required": true,
          "configurableInWizard": false,
          "default": "cdap-metadata-updates",
          "type": "string"
        },
        {
          "name": "metadata_updates_publish_enabled",
          "label": "Metadata Updates Publish Enabled",
          "description": "Determines if metadata updates will be published to Apache Kafka. External systems can subscribe to the Kafka topic determined by ${metadata.updates.kafka.topic} to receive notifications of metadata updates.",
          "configName": "metadata.updates.publish.enabled",
          "required": true,
          "configurableInWizard": false,
          "default": false,
          "type": "boolean"
        },
        {
          "name": "notification_kafka_topic",
          "label": "Notification Kafka Topic",
          "description": "Kafka topic name used to publish notifications",
          "configName": "notification.kafka.topic",
          "required": true,
          "configurableInWizard": false,
          "default": "notifications",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "master_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "app.bind.address",
                "value": "{{HOSTNAME}}"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              },
              {
                "key": "dataset.service.bind.address",
                "value": "{{HOSTNAME}}"
              },
              {
                "key": "app.adapter.dir",
                "value": "{{COMPONENT_HOME}}/plugins"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ],
        "auxConfigGenerators": [
          {
            "filename": "logback-container.xml",
            "sourceFilename": "aux/logback-container.xml"
          }
        ]
      },
      "kerberosPrincipals": [
        {
          "name": "cdap_principal",
          "primary": "cdap",
          "instance": "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "master.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "commands": [
        {
          "name": "master_upgrade_tool",
          "label": "Run CDAP Upgrade",
          "description": "Run after upgrading the CDAP Parcel, and before starting CDAP",
          "expectedExitCodes": [0],
          "requiredRoleState": "stopped",
          "commandRunner": {
            "program": "scripts/cdap-control.sh",
            "args": ["upgrade"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES": "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "CDAP_JAVA_OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}"
            }
          }
        },
        {
          "name": "master_upgrade_hbase_tool",
          "label": "Run Post-CDH Upgrade Tasks",
          "description": "Run after upgrading CDH, after disabling CDAP HBase Tables, and before starting CDAP",
          "expectedExitCodes": [0],
          "requiredRoleState": "stopped",
          "commandRunner": {
            "program": "scripts/cdap-control.sh",
            "args": ["upgrade_hbase"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES" : "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "CDAP_JAVA_OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}"
            }
          }
        },
        {
          "name": "master_post_upgrade_tasks",
          "label": "Run Post-CDAP Upgrade Tasks",
          "description": "Run after upgrading CDAP, and after starting CDAP the first time",
          "expectedExitCodes": [0],
          "requiredRoleState": "running",
          "commandRunner": {
            "program": "scripts/cdap-control.sh",
            "args": ["postupgrade"],
            "environmentVariables": {
              "EXPLORE_ENABLED": "${explore_enabled}",
              "KAFKA_PROPERTIES": "kafka.properties",
              "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
              "CDAP_JAVA_OPTS": "${cdap_java_opts}",
              "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}"
            }
          }
        }
      ],
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "master" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "MASTER_JAVA_HEAPMAX": "-Xmx${master_java_heapmax}",
          "STARTUP_CHECKS_ENABLED": "${master_startup_checks_enabled}"
        }
      }
    },
    {
      "name": "CDAP_UI",
      "label": "CDAP UI Service",
      "pluralLabel": "CDAP UI Services",
      "externalLink": {
        "name": "cdap_ui",
        "label": "CDAP UI",
        "url": "http://${host}:${dashboard_bind_port}"
      },
      "parameters": [
        {
          "name": "dashboard_bind_address",
          "label": "CDAP UI Bind Address",
          "description": "CDAP UI bind address",
          "configName": "dashboard.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "dashboard_bind_port",
          "label": "CDAP UI Bind Port",
          "description": "CDAP UI bind port",
          "configName": "dashboard.bind.port",
          "required": true,
          "configurableInWizard": true,
          "default": 9999,
          "type": "port"
        },
        {
          "name": "dashboard_router_check_timeout_secs",
          "label": "Dashboard Router Check Timeout Seconds",
          "description": "Amount of time, in seconds, CDAP UI waits before exiting when unable to connect to CDAP Router service on startup; use a timeout of 0 to wait indefinitely",
          "configName": "dashboard.router.check.timeout.secs",
          "required": true,
          "configurableInWizard": false,
          "default": 180,
          "type": "long",
          "unit": "seconds"
        },
        {
          "name": "dashboard_ssl_bind_port",
          "label": "Dashboard SSL Bind Port",
          "description": "CDAP UI bind port for HTTPS",
          "configName": "dashboard.ssl.bind.port",
          "required": true,
          "configurableInWizard": false,
          "default": 9443,
          "type": "port"
        },
        {
          "name": "dashboard_ssl_cert",
          "label": "Dashboard SSL Cert",
          "description": "SSL cert file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
          "configName": "dashboard.ssl.cert",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "dashboard_ssl_disable_cert_check",
          "label": "Dashboard SSL Disable Cert Check",
          "description": "True to disable SSL certificate check from the CDAP UI",
          "configName": "dashboard.ssl.disable.cert.check",
          "required": true,
          "configurableInWizard": false,
          "default": false,
          "type": "boolean"
        },
        {
          "name": "dashboard_ssl_key",
          "label": "Dashboard SSL Key",
          "description": "SSL key file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
          "configName": "dashboard.ssl.key",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "ui" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}"
        }
      }
    },
    {
      "name": "CDAP_AUTH_SERVER",
      "label": "CDAP Security Auth Service",
      "pluralLabel": "CDAP Security Auth Services",
      "topology": {
        "minInstances": "0"
      },
      "parameters": [
        {
          "name": "auth_java_heapmax",
          "label": "Auth Server Max Heapsize",
          "description": "Maximum size for the Java Process heap. Passed to Java -Xmx. Measured in bytes.",
          "required": "true",
          "type": "memory",
          "unit": "bytes",
          "min": 1073741824,
          "default": 2147483648,
          "scaleFactor": 1.3
        },
        {
          "name": "security_auth_server_bind_address",
          "label": "CDAP Authentication service bind address",
          "description": "CDAP Authentication service bind address",
          "configName": "security.auth.server.bind.address",
          "required": true,
          "configurableInWizard": false,
          "default": "0.0.0.0",
          "type": "string"
        },
        {
          "name": "security_auth_server_bind_port",
          "label": "Security Auth Server Bind Port",
          "description": "CDAP Authentication service bind port",
          "configName": "security.auth.server.bind.port",
          "required": true,
          "configurableInWizard": false,
          "default": 10009,
          "type": "port"
        },
        {
          "name": "security_auth_server_ssl_bind_port",
          "label": "Security Auth Server SSL Bind Port",
          "description": "CDAP Authentication service bind port for HTTPS",
          "configName": "security.auth.server.ssl.bind.port",
          "required": true,
          "configurableInWizard": false,
          "default": 10010,
          "type": "port"
        },
        {
          "name": "security_auth_server_ssl_keystore_keypassword",
          "label": "Security Auth Server SSL Keystore Key Password",
          "description": "Keystore key password",
          "configName": "security.auth.server.ssl.keystore.keypassword",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_auth_server_ssl_keystore_password",
          "label": "Security Auth Server SSL Keystore Password",
          "description": "Keystore password",
          "configName": "security.auth.server.ssl.keystore.password",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_auth_server_ssl_keystore_path",
          "label": "Security Auth Server SSL Keystore Path",
          "description": "Keystore file location, either absolute or relative; the file should be owned and readable only by the CDAP user",
          "configName": "security.auth.server.ssl.keystore.path",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_auth_server_ssl_keystore_type",
          "label": "Security Auth Server SSL Keystore Type",
          "description": "Keystore file type",
          "configName": "security.auth.server.ssl.keystore.type",
          "required": false,
          "configurableInWizard": false,
          "default": "JKS",
          "type": "string"
        },
        {
          "name": "security_authentication_basic_realmfile",
          "label": "Security Authentication Basic Realm File",
          "description": "Username / password file to use when basic authentication is configured",
          "configName": "security.authentication.basic.realmfile",
          "required": false,
          "configurableInWizard": false,
          "default": "",
          "type": "path",
          "pathType": "localDataFile"
        },
        {
          "name": "security_authentication_handler_debug",
          "label": "Security Authentication Handler Debug",
          "description": "Set to true to enable debugging",
          "configName": "security.authentication.handler.debug",
          "required": true,
          "configurableInWizard": false,
          "default": true,
          "type": "boolean"
        },
        {
          "name": "security_authentication_handler_hostname",
          "label": "Security Authentication Handler Hostname",
          "description": "LDAP server host",
          "configName": "security.authentication.handler.hostname",
          "required": true,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handler_port",
          "label": "Security Authentication Handler Port",
          "description": "LDAP server port",
          "configName": "security.authentication.handler.port",
          "required": true,
          "configurableInWizard": false,
          "default": "389",
          "type": "port"
        },
        {
          "name": "security_authentication_handler_userBaseDn",
          "label": "Security Authentication Handler userBaseDn",
          "description": "Distinguished Name of the root for user account entries in the LDAP directory",
          "configName": "security.authentication.handler.userBaseDn",
          "required": true,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handler_userObjectClass",
          "label": "Security Authentication Handler userObjectClass",
          "description": "LDAP Object class used to store user entries",
          "configName": "security.authentication.handler.userObjectClass",
          "required": true,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handler_userRdnAttribute",
          "label": "Security Authentication Handler userRdnAttribute",
          "description": "LDAP Object attribute for username when search by role DN",
          "configName": "security.authentication.handler.userRdnAttribute",
          "required": true,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        },
        {
          "name": "security_authentication_handlerClassName",
          "label": "Security Authentication Handler Class Name",
          "description": "Name of the authentication implementation to use to validate user credentials",
          "configName": "security.authentication.handlerClassName",
          "required": true,
          "configurableInWizard": false,
          "default": "co.cask.cdap.security.server.BasicAuthenticationHandler",
          "type": "string_enum",
          "validValues": [
            "co.cask.cdap.security.server.BasicAuthenticationHandler",
            "co.cask.cdap.security.server.LDAPAuthenticationHandler",
            "co.cask.cdap.security.server.JASPIAuthenticationHandler"
          ]
        },
        {
          "name": "security_authentication_loginmodule_className",
          "label": "Security Authentication Login Module Class Name",
          "description": "JAAS LoginModule implementation to use when co.cask.security.server.JAASAuthenticationHandler is configured for security.authentication.handlerClassName",
          "configName": "security.authentication.loginmodule.className",
          "required": true,
          "configurableInWizard": false,
          "default": "",
          "type": "string"
        }
      ],
      "configWriter": {
        "generators": [
          {
            "filename": "cdap-site.xml",
            "configFormat": "hadoop_xml",
            "excludedParams": [ "cdap_java_opts", "auth_java_heapmax" ],
            "additionalConfigs": [
              {
                "key": "zookeeper.quorum",
                "value": "{{ZK_QUORUM}}/${root_namespace}"
              },
              {
                "key": "kafka.seed.brokers",
                "value": "{{KAFKA_SEED_BROKERS}}"
              },
              {
                "key": "kafka.log.dir",
                "value": "{{LOCAL_DIR}}/kafka-logs"
              },
              {
                "key": "cdap.master.kerberos.keytab",
                "value": "{{CDAP_MASTER_KERBEROS_KEYTAB}}"
              },
              {
                "key": "cdap.master.kerberos.principal",
                "value": "{{CDAP_MASTER_KERBEROS_PRINCIPAL}}"
              }
            ]
          }
        ],
        "peerConfigGenerators": [
          {
            "filename": "kafka.properties",
            "params": [ "kafka_bind_port" ],
            "roleName": "CDAP_KAFKA"
          }
        ]
      },
      "kerberosPrincipals": [
        {
          "name": "cdap_principal",
          "primary": "cdap",
          "instance": "${host}"
        }
      ],
      "logging": {
        "dir": "/var/log/cdap",
        "filename": "auth-server.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          {
            "key": "disableChattyLoggerBeanutils",
            "value": "<logger name=\"org.apache.commons.beanutils\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeperServer",
            "value": "<logger name=\"org.apache.zookeeper.server\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerZookeeper",
            "value": "<logger name=\"org.apache.zookeeper\" level=\"ERROR\"/>"
          },
          {
            "key": "disableChattyLoggerNing",
            "value": "<logger name=\"com.ning\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHadoop",
            "value": "<logger name=\"org.apache.hadoop\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerHive",
            "value": "<logger name=\"org.apache.hive\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerQuartz",
            "value": "<logger name=\"org.quartz.core\" level=\"WARN\"/>"
          },
          {
            "key": "disableChattyLoggerCDAP",
            "value": "<logger name=\"co.cask.cdap\" level=\"INFO\"/>"
          }
        ]
      },
      "startRunner": {
        "program": "scripts/cdap-control.sh",
        "args": [ "auth-server" ],
        "environmentVariables": {
          "EXPLORE_ENABLED": "${explore_enabled}",
          "KAFKA_PROPERTIES": "kafka.properties",
          "KERBEROS_ENABLED": "${kerberos_auth_enabled}",
          "CDAP_JAVA_OPTS": "${cdap_java_opts}",
          "AUTH_JAVA_HEAPMAX": "-Xmx${auth_java_heapmax}"
        }
      }
    }
  ]
}
